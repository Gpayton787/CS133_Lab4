-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel_cnn is
generic (
    C_M_AXI_KERNEL_INPUT_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_KERNEL_INPUT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_INPUT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_INPUT_DATA_WIDTH : INTEGER := 128;
    C_M_AXI_KERNEL_INPUT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_INPUT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_INPUT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_INPUT_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_WEIGHT_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_KERNEL_WEIGHT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_WEIGHT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_WEIGHT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_KERNEL_WEIGHT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_WEIGHT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_WEIGHT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_WEIGHT_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_OUTPUT_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_KERNEL_OUTPUT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_OUTPUT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_OUTPUT_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_KERNEL_OUTPUT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_OUTPUT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_OUTPUT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_KERNEL_OUTPUT_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_KERNEL_INPUT_USER_VALUE : INTEGER := 0;
    C_M_AXI_KERNEL_INPUT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_KERNEL_INPUT_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_KERNEL_OUTPUT_USER_VALUE : INTEGER := 0;
    C_M_AXI_KERNEL_OUTPUT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_KERNEL_OUTPUT_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_KERNEL_WEIGHT_USER_VALUE : INTEGER := 0;
    C_M_AXI_KERNEL_WEIGHT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_KERNEL_WEIGHT_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_kernel_input_AWVALID : OUT STD_LOGIC;
    m_axi_kernel_input_AWREADY : IN STD_LOGIC;
    m_axi_kernel_input_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_ADDR_WIDTH-1 downto 0);
    m_axi_kernel_input_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_ID_WIDTH-1 downto 0);
    m_axi_kernel_input_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_kernel_input_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_input_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_input_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_AWUSER_WIDTH-1 downto 0);
    m_axi_kernel_input_WVALID : OUT STD_LOGIC;
    m_axi_kernel_input_WREADY : IN STD_LOGIC;
    m_axi_kernel_input_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_DATA_WIDTH-1 downto 0);
    m_axi_kernel_input_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_DATA_WIDTH/8-1 downto 0);
    m_axi_kernel_input_WLAST : OUT STD_LOGIC;
    m_axi_kernel_input_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_ID_WIDTH-1 downto 0);
    m_axi_kernel_input_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_WUSER_WIDTH-1 downto 0);
    m_axi_kernel_input_ARVALID : OUT STD_LOGIC;
    m_axi_kernel_input_ARREADY : IN STD_LOGIC;
    m_axi_kernel_input_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_ADDR_WIDTH-1 downto 0);
    m_axi_kernel_input_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_ID_WIDTH-1 downto 0);
    m_axi_kernel_input_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_kernel_input_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_input_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_input_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_input_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_ARUSER_WIDTH-1 downto 0);
    m_axi_kernel_input_RVALID : IN STD_LOGIC;
    m_axi_kernel_input_RREADY : OUT STD_LOGIC;
    m_axi_kernel_input_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_DATA_WIDTH-1 downto 0);
    m_axi_kernel_input_RLAST : IN STD_LOGIC;
    m_axi_kernel_input_RID : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_ID_WIDTH-1 downto 0);
    m_axi_kernel_input_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_RUSER_WIDTH-1 downto 0);
    m_axi_kernel_input_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_BVALID : IN STD_LOGIC;
    m_axi_kernel_input_BREADY : OUT STD_LOGIC;
    m_axi_kernel_input_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_input_BID : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_ID_WIDTH-1 downto 0);
    m_axi_kernel_input_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_INPUT_BUSER_WIDTH-1 downto 0);
    m_axi_kernel_weight_AWVALID : OUT STD_LOGIC;
    m_axi_kernel_weight_AWREADY : IN STD_LOGIC;
    m_axi_kernel_weight_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_ADDR_WIDTH-1 downto 0);
    m_axi_kernel_weight_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_ID_WIDTH-1 downto 0);
    m_axi_kernel_weight_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_kernel_weight_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_weight_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_weight_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_AWUSER_WIDTH-1 downto 0);
    m_axi_kernel_weight_WVALID : OUT STD_LOGIC;
    m_axi_kernel_weight_WREADY : IN STD_LOGIC;
    m_axi_kernel_weight_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_DATA_WIDTH-1 downto 0);
    m_axi_kernel_weight_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_DATA_WIDTH/8-1 downto 0);
    m_axi_kernel_weight_WLAST : OUT STD_LOGIC;
    m_axi_kernel_weight_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_ID_WIDTH-1 downto 0);
    m_axi_kernel_weight_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_WUSER_WIDTH-1 downto 0);
    m_axi_kernel_weight_ARVALID : OUT STD_LOGIC;
    m_axi_kernel_weight_ARREADY : IN STD_LOGIC;
    m_axi_kernel_weight_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_ADDR_WIDTH-1 downto 0);
    m_axi_kernel_weight_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_ID_WIDTH-1 downto 0);
    m_axi_kernel_weight_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_kernel_weight_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_weight_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_weight_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_weight_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_ARUSER_WIDTH-1 downto 0);
    m_axi_kernel_weight_RVALID : IN STD_LOGIC;
    m_axi_kernel_weight_RREADY : OUT STD_LOGIC;
    m_axi_kernel_weight_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_DATA_WIDTH-1 downto 0);
    m_axi_kernel_weight_RLAST : IN STD_LOGIC;
    m_axi_kernel_weight_RID : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_ID_WIDTH-1 downto 0);
    m_axi_kernel_weight_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_RUSER_WIDTH-1 downto 0);
    m_axi_kernel_weight_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_BVALID : IN STD_LOGIC;
    m_axi_kernel_weight_BREADY : OUT STD_LOGIC;
    m_axi_kernel_weight_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_weight_BID : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_ID_WIDTH-1 downto 0);
    m_axi_kernel_weight_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_WEIGHT_BUSER_WIDTH-1 downto 0);
    m_axi_kernel_output_AWVALID : OUT STD_LOGIC;
    m_axi_kernel_output_AWREADY : IN STD_LOGIC;
    m_axi_kernel_output_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_ADDR_WIDTH-1 downto 0);
    m_axi_kernel_output_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_ID_WIDTH-1 downto 0);
    m_axi_kernel_output_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_kernel_output_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_output_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_output_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_AWUSER_WIDTH-1 downto 0);
    m_axi_kernel_output_WVALID : OUT STD_LOGIC;
    m_axi_kernel_output_WREADY : IN STD_LOGIC;
    m_axi_kernel_output_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_DATA_WIDTH-1 downto 0);
    m_axi_kernel_output_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_DATA_WIDTH/8-1 downto 0);
    m_axi_kernel_output_WLAST : OUT STD_LOGIC;
    m_axi_kernel_output_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_ID_WIDTH-1 downto 0);
    m_axi_kernel_output_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_WUSER_WIDTH-1 downto 0);
    m_axi_kernel_output_ARVALID : OUT STD_LOGIC;
    m_axi_kernel_output_ARREADY : IN STD_LOGIC;
    m_axi_kernel_output_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_ADDR_WIDTH-1 downto 0);
    m_axi_kernel_output_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_ID_WIDTH-1 downto 0);
    m_axi_kernel_output_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_kernel_output_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_output_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_kernel_output_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_kernel_output_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_ARUSER_WIDTH-1 downto 0);
    m_axi_kernel_output_RVALID : IN STD_LOGIC;
    m_axi_kernel_output_RREADY : OUT STD_LOGIC;
    m_axi_kernel_output_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_DATA_WIDTH-1 downto 0);
    m_axi_kernel_output_RLAST : IN STD_LOGIC;
    m_axi_kernel_output_RID : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_ID_WIDTH-1 downto 0);
    m_axi_kernel_output_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_RUSER_WIDTH-1 downto 0);
    m_axi_kernel_output_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_BVALID : IN STD_LOGIC;
    m_axi_kernel_output_BREADY : OUT STD_LOGIC;
    m_axi_kernel_output_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_kernel_output_BID : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_ID_WIDTH-1 downto 0);
    m_axi_kernel_output_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_KERNEL_OUTPUT_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of kernel_cnn is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "kernel_cnn_kernel_cnn,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu200-fsgd2104-2-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.096500,HLS_SYN_LAT=159017426,HLS_SYN_TPT=none,HLS_SYN_MEM=1800,HLS_SYN_DSP=0,HLS_SYN_FF=444743,HLS_SYN_LUT=256716,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal vinput : STD_LOGIC_VECTOR (63 downto 0);
    signal vweight : STD_LOGIC_VECTOR (63 downto 0);
    signal voutput : STD_LOGIC_VECTOR (63 downto 0);
    signal voutput_read_reg_1014 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal vweight_read_reg_1019 : STD_LOGIC_VECTOR (63 downto 0);
    signal vinput_read_reg_1024 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_16_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_23_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_24_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_25_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_26_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_27_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_28_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_29_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_30_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_31_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_32_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_33_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_34_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_35_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_36_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_37_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_38_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_39_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_40_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_41_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_42_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_43_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_44_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_45_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_46_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_47_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_48_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_49_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_50_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_51_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_52_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_53_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_54_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_55_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_56_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_57_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_58_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_59_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_60_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_61_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_62_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_63_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_64_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_65_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_66_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_67_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_68_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_69_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_70_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_71_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_72_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_73_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_74_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_75_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_76_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_77_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_78_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_79_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_80_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_81_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_82_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_83_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_84_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_85_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_86_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_87_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_88_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_89_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_90_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_91_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_92_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_93_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_94_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_95_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_8_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_9_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_10_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_11_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_12_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_13_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_14_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_15_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_16_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_16_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_17_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_18_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_19_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_20_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_21_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_22_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_23_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_23_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_24_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_24_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_25_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_25_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_26_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_26_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_27_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_27_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_28_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_28_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_29_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_29_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_30_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_30_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_31_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_31_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_16_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_23_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_24_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_ap_start : STD_LOGIC;
    signal grp_cnn_fu_692_ap_done : STD_LOGIC;
    signal grp_cnn_fu_692_ap_idle : STD_LOGIC;
    signal grp_cnn_fu_692_ap_ready : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_8_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_8_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_9_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_9_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_10_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_10_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_0_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_0_11_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_11_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_0_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_8_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_8_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_9_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_9_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_10_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_10_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_1_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_1_11_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_11_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_1_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_8_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_8_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_9_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_9_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_10_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_10_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_2_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_2_11_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_11_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_2_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_8_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_8_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_9_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_9_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_10_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_10_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_3_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_3_11_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_11_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_3_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_8_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_8_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_9_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_9_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_10_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_10_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_4_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_4_11_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_11_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_4_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_8_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_8_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_9_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_9_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_10_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_10_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_5_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_5_11_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_11_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_5_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_8_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_8_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_9_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_9_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_10_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_10_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_6_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_6_11_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_11_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_6_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_8_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_8_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_9_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_9_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_10_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_10_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_input_7_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_cnn_fu_692_input_7_11_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_11_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_input_7_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_0_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_0_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_0_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_0_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_1_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_1_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_1_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_1_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_2_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_2_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_2_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_2_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_3_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_3_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_3_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_3_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_4_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_4_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_4_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_4_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_5_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_5_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_5_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_5_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_6_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_6_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_6_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_6_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_7_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_0_7_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_0_7_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_7_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_0_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_0_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_0_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_0_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_0_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_1_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_1_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_1_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_1_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_2_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_2_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_2_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_2_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_3_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_3_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_3_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_3_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_4_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_4_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_4_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_4_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_5_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_5_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_5_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_5_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_6_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_6_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_6_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_6_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_7_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_1_7_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_1_7_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_7_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_1_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_0_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_0_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_0_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_0_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_1_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_1_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_1_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_1_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_2_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_2_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_2_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_2_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_3_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_3_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_3_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_3_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_4_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_4_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_4_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_4_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_5_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_5_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_5_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_5_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_6_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_6_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_6_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_6_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_7_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_2_7_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_2_7_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_7_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_2_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_0_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_0_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_0_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_0_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_1_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_1_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_1_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_1_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_2_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_2_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_2_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_2_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_3_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_3_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_3_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_3_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_4_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_4_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_4_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_4_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_4_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_5_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_5_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_5_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_5_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_5_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_5_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_5_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_6_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_6_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_6_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_6_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_6_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_6_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_6_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_7_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_7_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_7_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_output_3_7_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_cnn_fu_692_output_3_7_ce1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_7_we1 : STD_LOGIC;
    signal grp_cnn_fu_692_output_3_7_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_0_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_0_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_0_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_0_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_0_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_0_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_0_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_0_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_0_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_0_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_0_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_0_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_0_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_0_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_0_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_0_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_0_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_0_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_0_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_1_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_1_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_1_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_1_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_1_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_1_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_1_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_1_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_1_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_1_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_1_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_1_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_1_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_1_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_1_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_1_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_1_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_1_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_1_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_2_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_2_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_2_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_2_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_2_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_2_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_2_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_2_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_2_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_2_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_2_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_2_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_2_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_2_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_2_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_2_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_2_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_2_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_2_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_3_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_3_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_3_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_3_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_3_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_3_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_3_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_3_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_3_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_3_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_3_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_3_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_3_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_3_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_3_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_3_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_3_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_3_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_3_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_4_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_4_0_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_4_0_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_4_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_4_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_4_1_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_4_1_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_4_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_4_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_4_2_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_4_2_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_4_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_4_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_4_3_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_4_3_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_4_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_weight_4_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_fu_692_weight_4_4_ce0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_4_4_we0 : STD_LOGIC;
    signal grp_cnn_fu_692_weight_4_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWVALID : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_input_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_WVALID : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_input_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_WSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_WLAST : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_input_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARVALID : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_input_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_input_RREADY : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_input_BREADY : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWVALID : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_WVALID : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_weight_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_WLAST : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_weight_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARVALID : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_weight_RREADY : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_weight_BREADY : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_output_AWVALID : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_output_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_WVALID : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_output_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_WLAST : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_output_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARVALID : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_output_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cnn_fu_692_m_axi_kernel_output_RREADY : STD_LOGIC;
    signal grp_cnn_fu_692_m_axi_kernel_output_BREADY : STD_LOGIC;
    signal kernel_input_AWREADY : STD_LOGIC;
    signal kernel_input_WREADY : STD_LOGIC;
    signal kernel_input_ARVALID : STD_LOGIC;
    signal kernel_input_ARREADY : STD_LOGIC;
    signal kernel_input_RVALID : STD_LOGIC;
    signal kernel_input_RREADY : STD_LOGIC;
    signal kernel_input_RDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal kernel_input_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_input_BVALID : STD_LOGIC;
    signal kernel_output_AWVALID : STD_LOGIC;
    signal kernel_output_AWREADY : STD_LOGIC;
    signal kernel_output_WVALID : STD_LOGIC;
    signal kernel_output_WREADY : STD_LOGIC;
    signal kernel_output_ARVALID : STD_LOGIC;
    signal kernel_output_ARREADY : STD_LOGIC;
    signal kernel_output_RVALID : STD_LOGIC;
    signal kernel_output_RREADY : STD_LOGIC;
    signal kernel_output_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal kernel_output_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_output_BVALID : STD_LOGIC;
    signal kernel_output_BREADY : STD_LOGIC;
    signal kernel_weight_AWREADY : STD_LOGIC;
    signal kernel_weight_WREADY : STD_LOGIC;
    signal kernel_weight_ARVALID : STD_LOGIC;
    signal kernel_weight_ARREADY : STD_LOGIC;
    signal kernel_weight_RVALID : STD_LOGIC;
    signal kernel_weight_RREADY : STD_LOGIC;
    signal kernel_weight_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_weight_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal kernel_weight_BVALID : STD_LOGIC;
    signal grp_cnn_fu_692_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call171 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel_cnn_cnn IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_0_ce0 : OUT STD_LOGIC;
        input_0_0_we0 : OUT STD_LOGIC;
        input_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_1_ce0 : OUT STD_LOGIC;
        input_0_1_we0 : OUT STD_LOGIC;
        input_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_2_ce0 : OUT STD_LOGIC;
        input_0_2_we0 : OUT STD_LOGIC;
        input_0_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_3_ce0 : OUT STD_LOGIC;
        input_0_3_we0 : OUT STD_LOGIC;
        input_0_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_4_ce0 : OUT STD_LOGIC;
        input_0_4_we0 : OUT STD_LOGIC;
        input_0_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_5_ce0 : OUT STD_LOGIC;
        input_0_5_we0 : OUT STD_LOGIC;
        input_0_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_6_ce0 : OUT STD_LOGIC;
        input_0_6_we0 : OUT STD_LOGIC;
        input_0_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_7_ce0 : OUT STD_LOGIC;
        input_0_7_we0 : OUT STD_LOGIC;
        input_0_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_8_ce0 : OUT STD_LOGIC;
        input_0_8_we0 : OUT STD_LOGIC;
        input_0_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_9_ce0 : OUT STD_LOGIC;
        input_0_9_we0 : OUT STD_LOGIC;
        input_0_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_10_ce0 : OUT STD_LOGIC;
        input_0_10_we0 : OUT STD_LOGIC;
        input_0_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_0_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_0_11_ce0 : OUT STD_LOGIC;
        input_0_11_we0 : OUT STD_LOGIC;
        input_0_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_0_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_0_ce0 : OUT STD_LOGIC;
        input_1_0_we0 : OUT STD_LOGIC;
        input_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_1_ce0 : OUT STD_LOGIC;
        input_1_1_we0 : OUT STD_LOGIC;
        input_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_2_ce0 : OUT STD_LOGIC;
        input_1_2_we0 : OUT STD_LOGIC;
        input_1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_3_ce0 : OUT STD_LOGIC;
        input_1_3_we0 : OUT STD_LOGIC;
        input_1_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_4_ce0 : OUT STD_LOGIC;
        input_1_4_we0 : OUT STD_LOGIC;
        input_1_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_5_ce0 : OUT STD_LOGIC;
        input_1_5_we0 : OUT STD_LOGIC;
        input_1_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_6_ce0 : OUT STD_LOGIC;
        input_1_6_we0 : OUT STD_LOGIC;
        input_1_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_7_ce0 : OUT STD_LOGIC;
        input_1_7_we0 : OUT STD_LOGIC;
        input_1_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_8_ce0 : OUT STD_LOGIC;
        input_1_8_we0 : OUT STD_LOGIC;
        input_1_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_9_ce0 : OUT STD_LOGIC;
        input_1_9_we0 : OUT STD_LOGIC;
        input_1_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_10_ce0 : OUT STD_LOGIC;
        input_1_10_we0 : OUT STD_LOGIC;
        input_1_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_1_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_1_11_ce0 : OUT STD_LOGIC;
        input_1_11_we0 : OUT STD_LOGIC;
        input_1_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_1_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_0_ce0 : OUT STD_LOGIC;
        input_2_0_we0 : OUT STD_LOGIC;
        input_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_1_ce0 : OUT STD_LOGIC;
        input_2_1_we0 : OUT STD_LOGIC;
        input_2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_2_ce0 : OUT STD_LOGIC;
        input_2_2_we0 : OUT STD_LOGIC;
        input_2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_3_ce0 : OUT STD_LOGIC;
        input_2_3_we0 : OUT STD_LOGIC;
        input_2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_4_ce0 : OUT STD_LOGIC;
        input_2_4_we0 : OUT STD_LOGIC;
        input_2_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_5_ce0 : OUT STD_LOGIC;
        input_2_5_we0 : OUT STD_LOGIC;
        input_2_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_6_ce0 : OUT STD_LOGIC;
        input_2_6_we0 : OUT STD_LOGIC;
        input_2_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_7_ce0 : OUT STD_LOGIC;
        input_2_7_we0 : OUT STD_LOGIC;
        input_2_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_8_ce0 : OUT STD_LOGIC;
        input_2_8_we0 : OUT STD_LOGIC;
        input_2_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_9_ce0 : OUT STD_LOGIC;
        input_2_9_we0 : OUT STD_LOGIC;
        input_2_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_10_ce0 : OUT STD_LOGIC;
        input_2_10_we0 : OUT STD_LOGIC;
        input_2_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_2_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_2_11_ce0 : OUT STD_LOGIC;
        input_2_11_we0 : OUT STD_LOGIC;
        input_2_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_2_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_0_ce0 : OUT STD_LOGIC;
        input_3_0_we0 : OUT STD_LOGIC;
        input_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_1_ce0 : OUT STD_LOGIC;
        input_3_1_we0 : OUT STD_LOGIC;
        input_3_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_2_ce0 : OUT STD_LOGIC;
        input_3_2_we0 : OUT STD_LOGIC;
        input_3_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_3_ce0 : OUT STD_LOGIC;
        input_3_3_we0 : OUT STD_LOGIC;
        input_3_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_4_ce0 : OUT STD_LOGIC;
        input_3_4_we0 : OUT STD_LOGIC;
        input_3_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_5_ce0 : OUT STD_LOGIC;
        input_3_5_we0 : OUT STD_LOGIC;
        input_3_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_6_ce0 : OUT STD_LOGIC;
        input_3_6_we0 : OUT STD_LOGIC;
        input_3_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_7_ce0 : OUT STD_LOGIC;
        input_3_7_we0 : OUT STD_LOGIC;
        input_3_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_8_ce0 : OUT STD_LOGIC;
        input_3_8_we0 : OUT STD_LOGIC;
        input_3_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_9_ce0 : OUT STD_LOGIC;
        input_3_9_we0 : OUT STD_LOGIC;
        input_3_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_10_ce0 : OUT STD_LOGIC;
        input_3_10_we0 : OUT STD_LOGIC;
        input_3_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_3_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_3_11_ce0 : OUT STD_LOGIC;
        input_3_11_we0 : OUT STD_LOGIC;
        input_3_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_3_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_0_ce0 : OUT STD_LOGIC;
        input_4_0_we0 : OUT STD_LOGIC;
        input_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_1_ce0 : OUT STD_LOGIC;
        input_4_1_we0 : OUT STD_LOGIC;
        input_4_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_2_ce0 : OUT STD_LOGIC;
        input_4_2_we0 : OUT STD_LOGIC;
        input_4_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_3_ce0 : OUT STD_LOGIC;
        input_4_3_we0 : OUT STD_LOGIC;
        input_4_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_4_ce0 : OUT STD_LOGIC;
        input_4_4_we0 : OUT STD_LOGIC;
        input_4_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_5_ce0 : OUT STD_LOGIC;
        input_4_5_we0 : OUT STD_LOGIC;
        input_4_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_6_ce0 : OUT STD_LOGIC;
        input_4_6_we0 : OUT STD_LOGIC;
        input_4_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_7_ce0 : OUT STD_LOGIC;
        input_4_7_we0 : OUT STD_LOGIC;
        input_4_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_8_ce0 : OUT STD_LOGIC;
        input_4_8_we0 : OUT STD_LOGIC;
        input_4_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_9_ce0 : OUT STD_LOGIC;
        input_4_9_we0 : OUT STD_LOGIC;
        input_4_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_10_ce0 : OUT STD_LOGIC;
        input_4_10_we0 : OUT STD_LOGIC;
        input_4_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_4_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_4_11_ce0 : OUT STD_LOGIC;
        input_4_11_we0 : OUT STD_LOGIC;
        input_4_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_4_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_0_ce0 : OUT STD_LOGIC;
        input_5_0_we0 : OUT STD_LOGIC;
        input_5_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_1_ce0 : OUT STD_LOGIC;
        input_5_1_we0 : OUT STD_LOGIC;
        input_5_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_2_ce0 : OUT STD_LOGIC;
        input_5_2_we0 : OUT STD_LOGIC;
        input_5_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_3_ce0 : OUT STD_LOGIC;
        input_5_3_we0 : OUT STD_LOGIC;
        input_5_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_4_ce0 : OUT STD_LOGIC;
        input_5_4_we0 : OUT STD_LOGIC;
        input_5_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_5_ce0 : OUT STD_LOGIC;
        input_5_5_we0 : OUT STD_LOGIC;
        input_5_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_6_ce0 : OUT STD_LOGIC;
        input_5_6_we0 : OUT STD_LOGIC;
        input_5_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_7_ce0 : OUT STD_LOGIC;
        input_5_7_we0 : OUT STD_LOGIC;
        input_5_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_8_ce0 : OUT STD_LOGIC;
        input_5_8_we0 : OUT STD_LOGIC;
        input_5_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_9_ce0 : OUT STD_LOGIC;
        input_5_9_we0 : OUT STD_LOGIC;
        input_5_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_10_ce0 : OUT STD_LOGIC;
        input_5_10_we0 : OUT STD_LOGIC;
        input_5_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_5_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_5_11_ce0 : OUT STD_LOGIC;
        input_5_11_we0 : OUT STD_LOGIC;
        input_5_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_5_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_0_ce0 : OUT STD_LOGIC;
        input_6_0_we0 : OUT STD_LOGIC;
        input_6_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_1_ce0 : OUT STD_LOGIC;
        input_6_1_we0 : OUT STD_LOGIC;
        input_6_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_2_ce0 : OUT STD_LOGIC;
        input_6_2_we0 : OUT STD_LOGIC;
        input_6_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_3_ce0 : OUT STD_LOGIC;
        input_6_3_we0 : OUT STD_LOGIC;
        input_6_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_4_ce0 : OUT STD_LOGIC;
        input_6_4_we0 : OUT STD_LOGIC;
        input_6_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_5_ce0 : OUT STD_LOGIC;
        input_6_5_we0 : OUT STD_LOGIC;
        input_6_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_6_ce0 : OUT STD_LOGIC;
        input_6_6_we0 : OUT STD_LOGIC;
        input_6_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_7_ce0 : OUT STD_LOGIC;
        input_6_7_we0 : OUT STD_LOGIC;
        input_6_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_8_ce0 : OUT STD_LOGIC;
        input_6_8_we0 : OUT STD_LOGIC;
        input_6_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_9_ce0 : OUT STD_LOGIC;
        input_6_9_we0 : OUT STD_LOGIC;
        input_6_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_10_ce0 : OUT STD_LOGIC;
        input_6_10_we0 : OUT STD_LOGIC;
        input_6_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_6_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_6_11_ce0 : OUT STD_LOGIC;
        input_6_11_we0 : OUT STD_LOGIC;
        input_6_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_6_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_0_ce0 : OUT STD_LOGIC;
        input_7_0_we0 : OUT STD_LOGIC;
        input_7_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_1_ce0 : OUT STD_LOGIC;
        input_7_1_we0 : OUT STD_LOGIC;
        input_7_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_2_ce0 : OUT STD_LOGIC;
        input_7_2_we0 : OUT STD_LOGIC;
        input_7_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_3_ce0 : OUT STD_LOGIC;
        input_7_3_we0 : OUT STD_LOGIC;
        input_7_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_4_ce0 : OUT STD_LOGIC;
        input_7_4_we0 : OUT STD_LOGIC;
        input_7_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_5_ce0 : OUT STD_LOGIC;
        input_7_5_we0 : OUT STD_LOGIC;
        input_7_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_6_ce0 : OUT STD_LOGIC;
        input_7_6_we0 : OUT STD_LOGIC;
        input_7_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_7_ce0 : OUT STD_LOGIC;
        input_7_7_we0 : OUT STD_LOGIC;
        input_7_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_8_ce0 : OUT STD_LOGIC;
        input_7_8_we0 : OUT STD_LOGIC;
        input_7_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_9_ce0 : OUT STD_LOGIC;
        input_7_9_we0 : OUT STD_LOGIC;
        input_7_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_10_ce0 : OUT STD_LOGIC;
        input_7_10_we0 : OUT STD_LOGIC;
        input_7_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_7_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_7_11_ce0 : OUT STD_LOGIC;
        input_7_11_we0 : OUT STD_LOGIC;
        input_7_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_7_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_0_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_0_ce0 : OUT STD_LOGIC;
        output_0_0_we0 : OUT STD_LOGIC;
        output_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_0_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_0_ce1 : OUT STD_LOGIC;
        output_0_0_we1 : OUT STD_LOGIC;
        output_0_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_1_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_1_ce0 : OUT STD_LOGIC;
        output_0_1_we0 : OUT STD_LOGIC;
        output_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_1_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_1_ce1 : OUT STD_LOGIC;
        output_0_1_we1 : OUT STD_LOGIC;
        output_0_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_2_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_2_ce0 : OUT STD_LOGIC;
        output_0_2_we0 : OUT STD_LOGIC;
        output_0_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_2_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_2_ce1 : OUT STD_LOGIC;
        output_0_2_we1 : OUT STD_LOGIC;
        output_0_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_3_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_3_ce0 : OUT STD_LOGIC;
        output_0_3_we0 : OUT STD_LOGIC;
        output_0_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_3_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_3_ce1 : OUT STD_LOGIC;
        output_0_3_we1 : OUT STD_LOGIC;
        output_0_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_4_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_4_ce0 : OUT STD_LOGIC;
        output_0_4_we0 : OUT STD_LOGIC;
        output_0_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_4_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_4_ce1 : OUT STD_LOGIC;
        output_0_4_we1 : OUT STD_LOGIC;
        output_0_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_5_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_5_ce0 : OUT STD_LOGIC;
        output_0_5_we0 : OUT STD_LOGIC;
        output_0_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_5_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_5_ce1 : OUT STD_LOGIC;
        output_0_5_we1 : OUT STD_LOGIC;
        output_0_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_6_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_6_ce0 : OUT STD_LOGIC;
        output_0_6_we0 : OUT STD_LOGIC;
        output_0_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_6_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_6_ce1 : OUT STD_LOGIC;
        output_0_6_we1 : OUT STD_LOGIC;
        output_0_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_7_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_7_ce0 : OUT STD_LOGIC;
        output_0_7_we0 : OUT STD_LOGIC;
        output_0_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_7_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_0_7_ce1 : OUT STD_LOGIC;
        output_0_7_we1 : OUT STD_LOGIC;
        output_0_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_0_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_0_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_0_ce0 : OUT STD_LOGIC;
        output_1_0_we0 : OUT STD_LOGIC;
        output_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_0_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_0_ce1 : OUT STD_LOGIC;
        output_1_0_we1 : OUT STD_LOGIC;
        output_1_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_1_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_1_ce0 : OUT STD_LOGIC;
        output_1_1_we0 : OUT STD_LOGIC;
        output_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_1_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_1_ce1 : OUT STD_LOGIC;
        output_1_1_we1 : OUT STD_LOGIC;
        output_1_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_2_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_2_ce0 : OUT STD_LOGIC;
        output_1_2_we0 : OUT STD_LOGIC;
        output_1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_2_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_2_ce1 : OUT STD_LOGIC;
        output_1_2_we1 : OUT STD_LOGIC;
        output_1_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_3_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_3_ce0 : OUT STD_LOGIC;
        output_1_3_we0 : OUT STD_LOGIC;
        output_1_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_3_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_3_ce1 : OUT STD_LOGIC;
        output_1_3_we1 : OUT STD_LOGIC;
        output_1_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_4_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_4_ce0 : OUT STD_LOGIC;
        output_1_4_we0 : OUT STD_LOGIC;
        output_1_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_4_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_4_ce1 : OUT STD_LOGIC;
        output_1_4_we1 : OUT STD_LOGIC;
        output_1_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_5_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_5_ce0 : OUT STD_LOGIC;
        output_1_5_we0 : OUT STD_LOGIC;
        output_1_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_5_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_5_ce1 : OUT STD_LOGIC;
        output_1_5_we1 : OUT STD_LOGIC;
        output_1_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_6_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_6_ce0 : OUT STD_LOGIC;
        output_1_6_we0 : OUT STD_LOGIC;
        output_1_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_6_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_6_ce1 : OUT STD_LOGIC;
        output_1_6_we1 : OUT STD_LOGIC;
        output_1_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_7_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_7_ce0 : OUT STD_LOGIC;
        output_1_7_we0 : OUT STD_LOGIC;
        output_1_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_7_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_1_7_ce1 : OUT STD_LOGIC;
        output_1_7_we1 : OUT STD_LOGIC;
        output_1_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_0_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_0_ce0 : OUT STD_LOGIC;
        output_2_0_we0 : OUT STD_LOGIC;
        output_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_0_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_0_ce1 : OUT STD_LOGIC;
        output_2_0_we1 : OUT STD_LOGIC;
        output_2_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_1_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_1_ce0 : OUT STD_LOGIC;
        output_2_1_we0 : OUT STD_LOGIC;
        output_2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_1_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_1_ce1 : OUT STD_LOGIC;
        output_2_1_we1 : OUT STD_LOGIC;
        output_2_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_2_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_2_ce0 : OUT STD_LOGIC;
        output_2_2_we0 : OUT STD_LOGIC;
        output_2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_2_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_2_ce1 : OUT STD_LOGIC;
        output_2_2_we1 : OUT STD_LOGIC;
        output_2_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_3_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_3_ce0 : OUT STD_LOGIC;
        output_2_3_we0 : OUT STD_LOGIC;
        output_2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_3_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_3_ce1 : OUT STD_LOGIC;
        output_2_3_we1 : OUT STD_LOGIC;
        output_2_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_4_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_4_ce0 : OUT STD_LOGIC;
        output_2_4_we0 : OUT STD_LOGIC;
        output_2_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_4_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_4_ce1 : OUT STD_LOGIC;
        output_2_4_we1 : OUT STD_LOGIC;
        output_2_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_5_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_5_ce0 : OUT STD_LOGIC;
        output_2_5_we0 : OUT STD_LOGIC;
        output_2_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_5_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_5_ce1 : OUT STD_LOGIC;
        output_2_5_we1 : OUT STD_LOGIC;
        output_2_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_6_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_6_ce0 : OUT STD_LOGIC;
        output_2_6_we0 : OUT STD_LOGIC;
        output_2_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_6_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_6_ce1 : OUT STD_LOGIC;
        output_2_6_we1 : OUT STD_LOGIC;
        output_2_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_7_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_7_ce0 : OUT STD_LOGIC;
        output_2_7_we0 : OUT STD_LOGIC;
        output_2_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_7_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_2_7_ce1 : OUT STD_LOGIC;
        output_2_7_we1 : OUT STD_LOGIC;
        output_2_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_0_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_0_ce0 : OUT STD_LOGIC;
        output_3_0_we0 : OUT STD_LOGIC;
        output_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_0_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_0_ce1 : OUT STD_LOGIC;
        output_3_0_we1 : OUT STD_LOGIC;
        output_3_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_1_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_1_ce0 : OUT STD_LOGIC;
        output_3_1_we0 : OUT STD_LOGIC;
        output_3_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_1_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_1_ce1 : OUT STD_LOGIC;
        output_3_1_we1 : OUT STD_LOGIC;
        output_3_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_2_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_2_ce0 : OUT STD_LOGIC;
        output_3_2_we0 : OUT STD_LOGIC;
        output_3_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_2_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_2_ce1 : OUT STD_LOGIC;
        output_3_2_we1 : OUT STD_LOGIC;
        output_3_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_3_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_3_ce0 : OUT STD_LOGIC;
        output_3_3_we0 : OUT STD_LOGIC;
        output_3_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_3_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_3_ce1 : OUT STD_LOGIC;
        output_3_3_we1 : OUT STD_LOGIC;
        output_3_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_4_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_4_ce0 : OUT STD_LOGIC;
        output_3_4_we0 : OUT STD_LOGIC;
        output_3_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_4_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_4_ce1 : OUT STD_LOGIC;
        output_3_4_we1 : OUT STD_LOGIC;
        output_3_4_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_5_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_5_ce0 : OUT STD_LOGIC;
        output_3_5_we0 : OUT STD_LOGIC;
        output_3_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_5_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_5_ce1 : OUT STD_LOGIC;
        output_3_5_we1 : OUT STD_LOGIC;
        output_3_5_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_6_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_6_ce0 : OUT STD_LOGIC;
        output_3_6_we0 : OUT STD_LOGIC;
        output_3_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_6_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_6_ce1 : OUT STD_LOGIC;
        output_3_6_we1 : OUT STD_LOGIC;
        output_3_6_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_7_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_7_ce0 : OUT STD_LOGIC;
        output_3_7_we0 : OUT STD_LOGIC;
        output_3_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_7_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        output_3_7_ce1 : OUT STD_LOGIC;
        output_3_7_we1 : OUT STD_LOGIC;
        output_3_7_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_0_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_0_0_ce0 : OUT STD_LOGIC;
        weight_0_0_we0 : OUT STD_LOGIC;
        weight_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_0_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_0_1_ce0 : OUT STD_LOGIC;
        weight_0_1_we0 : OUT STD_LOGIC;
        weight_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_0_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_0_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_0_2_ce0 : OUT STD_LOGIC;
        weight_0_2_we0 : OUT STD_LOGIC;
        weight_0_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_0_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_0_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_0_3_ce0 : OUT STD_LOGIC;
        weight_0_3_we0 : OUT STD_LOGIC;
        weight_0_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_0_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_0_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_0_4_ce0 : OUT STD_LOGIC;
        weight_0_4_we0 : OUT STD_LOGIC;
        weight_0_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_0_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_1_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_1_0_ce0 : OUT STD_LOGIC;
        weight_1_0_we0 : OUT STD_LOGIC;
        weight_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_1_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_1_1_ce0 : OUT STD_LOGIC;
        weight_1_1_we0 : OUT STD_LOGIC;
        weight_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_1_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_1_2_ce0 : OUT STD_LOGIC;
        weight_1_2_we0 : OUT STD_LOGIC;
        weight_1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_1_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_1_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_1_3_ce0 : OUT STD_LOGIC;
        weight_1_3_we0 : OUT STD_LOGIC;
        weight_1_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_1_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_1_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_1_4_ce0 : OUT STD_LOGIC;
        weight_1_4_we0 : OUT STD_LOGIC;
        weight_1_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_1_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_2_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_2_0_ce0 : OUT STD_LOGIC;
        weight_2_0_we0 : OUT STD_LOGIC;
        weight_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_2_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_2_1_ce0 : OUT STD_LOGIC;
        weight_2_1_we0 : OUT STD_LOGIC;
        weight_2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_2_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_2_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_2_2_ce0 : OUT STD_LOGIC;
        weight_2_2_we0 : OUT STD_LOGIC;
        weight_2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_2_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_2_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_2_3_ce0 : OUT STD_LOGIC;
        weight_2_3_we0 : OUT STD_LOGIC;
        weight_2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_2_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_2_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_2_4_ce0 : OUT STD_LOGIC;
        weight_2_4_we0 : OUT STD_LOGIC;
        weight_2_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_2_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_3_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_3_0_ce0 : OUT STD_LOGIC;
        weight_3_0_we0 : OUT STD_LOGIC;
        weight_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_3_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_3_1_ce0 : OUT STD_LOGIC;
        weight_3_1_we0 : OUT STD_LOGIC;
        weight_3_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_3_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_3_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_3_2_ce0 : OUT STD_LOGIC;
        weight_3_2_we0 : OUT STD_LOGIC;
        weight_3_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_3_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_3_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_3_3_ce0 : OUT STD_LOGIC;
        weight_3_3_we0 : OUT STD_LOGIC;
        weight_3_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_3_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_3_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_3_4_ce0 : OUT STD_LOGIC;
        weight_3_4_we0 : OUT STD_LOGIC;
        weight_3_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_3_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_4_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_4_0_ce0 : OUT STD_LOGIC;
        weight_4_0_we0 : OUT STD_LOGIC;
        weight_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_4_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_4_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_4_1_ce0 : OUT STD_LOGIC;
        weight_4_1_we0 : OUT STD_LOGIC;
        weight_4_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_4_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_4_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_4_2_ce0 : OUT STD_LOGIC;
        weight_4_2_we0 : OUT STD_LOGIC;
        weight_4_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_4_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_4_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_4_3_ce0 : OUT STD_LOGIC;
        weight_4_3_we0 : OUT STD_LOGIC;
        weight_4_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_4_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_4_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_4_4_ce0 : OUT STD_LOGIC;
        weight_4_4_we0 : OUT STD_LOGIC;
        weight_4_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        weight_4_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_input_AWVALID : OUT STD_LOGIC;
        m_axi_kernel_input_AWREADY : IN STD_LOGIC;
        m_axi_kernel_input_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_input_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_input_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_input_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_input_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_WVALID : OUT STD_LOGIC;
        m_axi_kernel_input_WREADY : IN STD_LOGIC;
        m_axi_kernel_input_WDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        m_axi_kernel_input_WSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_kernel_input_WLAST : OUT STD_LOGIC;
        m_axi_kernel_input_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_ARVALID : OUT STD_LOGIC;
        m_axi_kernel_input_ARREADY : IN STD_LOGIC;
        m_axi_kernel_input_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_input_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_input_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_input_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_input_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_input_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_RVALID : IN STD_LOGIC;
        m_axi_kernel_input_RREADY : OUT STD_LOGIC;
        m_axi_kernel_input_RDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        m_axi_kernel_input_RLAST : IN STD_LOGIC;
        m_axi_kernel_input_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_kernel_input_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_BVALID : IN STD_LOGIC;
        m_axi_kernel_input_BREADY : OUT STD_LOGIC;
        m_axi_kernel_input_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_input_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_input_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        vinput : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_weight_AWVALID : OUT STD_LOGIC;
        m_axi_kernel_weight_AWREADY : IN STD_LOGIC;
        m_axi_kernel_weight_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_weight_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_weight_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_weight_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_weight_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_WVALID : OUT STD_LOGIC;
        m_axi_kernel_weight_WREADY : IN STD_LOGIC;
        m_axi_kernel_weight_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_weight_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_WLAST : OUT STD_LOGIC;
        m_axi_kernel_weight_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_ARVALID : OUT STD_LOGIC;
        m_axi_kernel_weight_ARREADY : IN STD_LOGIC;
        m_axi_kernel_weight_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_weight_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_weight_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_weight_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_weight_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_weight_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_RVALID : IN STD_LOGIC;
        m_axi_kernel_weight_RREADY : OUT STD_LOGIC;
        m_axi_kernel_weight_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_weight_RLAST : IN STD_LOGIC;
        m_axi_kernel_weight_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_kernel_weight_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_BVALID : IN STD_LOGIC;
        m_axi_kernel_weight_BREADY : OUT STD_LOGIC;
        m_axi_kernel_weight_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_weight_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_weight_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        vweight : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_output_AWVALID : OUT STD_LOGIC;
        m_axi_kernel_output_AWREADY : IN STD_LOGIC;
        m_axi_kernel_output_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_output_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_output_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_WVALID : OUT STD_LOGIC;
        m_axi_kernel_output_WREADY : IN STD_LOGIC;
        m_axi_kernel_output_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kernel_output_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_output_WLAST : OUT STD_LOGIC;
        m_axi_kernel_output_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_ARVALID : OUT STD_LOGIC;
        m_axi_kernel_output_ARREADY : IN STD_LOGIC;
        m_axi_kernel_output_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_kernel_output_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_kernel_output_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_kernel_output_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_kernel_output_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_RVALID : IN STD_LOGIC;
        m_axi_kernel_output_RREADY : OUT STD_LOGIC;
        m_axi_kernel_output_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_kernel_output_RLAST : IN STD_LOGIC;
        m_axi_kernel_output_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_kernel_output_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_BVALID : IN STD_LOGIC;
        m_axi_kernel_output_BREADY : OUT STD_LOGIC;
        m_axi_kernel_output_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_kernel_output_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_kernel_output_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        voutput : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel_cnn_input_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_cnn_output_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_cnn_weight_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel_cnn_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        vinput : OUT STD_LOGIC_VECTOR (63 downto 0);
        vweight : OUT STD_LOGIC_VECTOR (63 downto 0);
        voutput : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component kernel_cnn_kernel_input_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component kernel_cnn_kernel_output_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component kernel_cnn_kernel_weight_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    input_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_0_address0,
        ce0 => grp_cnn_fu_692_input_0_0_ce0,
        we0 => grp_cnn_fu_692_input_0_0_we0,
        d0 => grp_cnn_fu_692_input_0_0_d0,
        q0 => input_q0);

    input_1_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_1_address0,
        ce0 => grp_cnn_fu_692_input_0_1_ce0,
        we0 => grp_cnn_fu_692_input_0_1_we0,
        d0 => grp_cnn_fu_692_input_0_1_d0,
        q0 => input_1_q0);

    input_2_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_2_address0,
        ce0 => grp_cnn_fu_692_input_0_2_ce0,
        we0 => grp_cnn_fu_692_input_0_2_we0,
        d0 => grp_cnn_fu_692_input_0_2_d0,
        q0 => input_2_q0);

    input_3_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_3_address0,
        ce0 => grp_cnn_fu_692_input_0_3_ce0,
        we0 => grp_cnn_fu_692_input_0_3_we0,
        d0 => grp_cnn_fu_692_input_0_3_d0,
        q0 => input_3_q0);

    input_4_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_4_address0,
        ce0 => grp_cnn_fu_692_input_0_4_ce0,
        we0 => grp_cnn_fu_692_input_0_4_we0,
        d0 => grp_cnn_fu_692_input_0_4_d0,
        q0 => input_4_q0);

    input_5_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_5_address0,
        ce0 => grp_cnn_fu_692_input_0_5_ce0,
        we0 => grp_cnn_fu_692_input_0_5_we0,
        d0 => grp_cnn_fu_692_input_0_5_d0,
        q0 => input_5_q0);

    input_6_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_6_address0,
        ce0 => grp_cnn_fu_692_input_0_6_ce0,
        we0 => grp_cnn_fu_692_input_0_6_we0,
        d0 => grp_cnn_fu_692_input_0_6_d0,
        q0 => input_6_q0);

    input_7_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_7_address0,
        ce0 => grp_cnn_fu_692_input_0_7_ce0,
        we0 => grp_cnn_fu_692_input_0_7_we0,
        d0 => grp_cnn_fu_692_input_0_7_d0,
        q0 => input_7_q0);

    input_8_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_8_address0,
        ce0 => grp_cnn_fu_692_input_0_8_ce0,
        we0 => grp_cnn_fu_692_input_0_8_we0,
        d0 => grp_cnn_fu_692_input_0_8_d0,
        q0 => input_8_q0);

    input_9_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_9_address0,
        ce0 => grp_cnn_fu_692_input_0_9_ce0,
        we0 => grp_cnn_fu_692_input_0_9_we0,
        d0 => grp_cnn_fu_692_input_0_9_d0,
        q0 => input_9_q0);

    input_10_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_10_address0,
        ce0 => grp_cnn_fu_692_input_0_10_ce0,
        we0 => grp_cnn_fu_692_input_0_10_we0,
        d0 => grp_cnn_fu_692_input_0_10_d0,
        q0 => input_10_q0);

    input_11_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_0_11_address0,
        ce0 => grp_cnn_fu_692_input_0_11_ce0,
        we0 => grp_cnn_fu_692_input_0_11_we0,
        d0 => grp_cnn_fu_692_input_0_11_d0,
        q0 => input_11_q0);

    input_12_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_0_address0,
        ce0 => grp_cnn_fu_692_input_1_0_ce0,
        we0 => grp_cnn_fu_692_input_1_0_we0,
        d0 => grp_cnn_fu_692_input_1_0_d0,
        q0 => input_12_q0);

    input_13_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_1_address0,
        ce0 => grp_cnn_fu_692_input_1_1_ce0,
        we0 => grp_cnn_fu_692_input_1_1_we0,
        d0 => grp_cnn_fu_692_input_1_1_d0,
        q0 => input_13_q0);

    input_14_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_2_address0,
        ce0 => grp_cnn_fu_692_input_1_2_ce0,
        we0 => grp_cnn_fu_692_input_1_2_we0,
        d0 => grp_cnn_fu_692_input_1_2_d0,
        q0 => input_14_q0);

    input_15_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_3_address0,
        ce0 => grp_cnn_fu_692_input_1_3_ce0,
        we0 => grp_cnn_fu_692_input_1_3_we0,
        d0 => grp_cnn_fu_692_input_1_3_d0,
        q0 => input_15_q0);

    input_16_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_4_address0,
        ce0 => grp_cnn_fu_692_input_1_4_ce0,
        we0 => grp_cnn_fu_692_input_1_4_we0,
        d0 => grp_cnn_fu_692_input_1_4_d0,
        q0 => input_16_q0);

    input_17_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_5_address0,
        ce0 => grp_cnn_fu_692_input_1_5_ce0,
        we0 => grp_cnn_fu_692_input_1_5_we0,
        d0 => grp_cnn_fu_692_input_1_5_d0,
        q0 => input_17_q0);

    input_18_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_6_address0,
        ce0 => grp_cnn_fu_692_input_1_6_ce0,
        we0 => grp_cnn_fu_692_input_1_6_we0,
        d0 => grp_cnn_fu_692_input_1_6_d0,
        q0 => input_18_q0);

    input_19_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_7_address0,
        ce0 => grp_cnn_fu_692_input_1_7_ce0,
        we0 => grp_cnn_fu_692_input_1_7_we0,
        d0 => grp_cnn_fu_692_input_1_7_d0,
        q0 => input_19_q0);

    input_20_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_8_address0,
        ce0 => grp_cnn_fu_692_input_1_8_ce0,
        we0 => grp_cnn_fu_692_input_1_8_we0,
        d0 => grp_cnn_fu_692_input_1_8_d0,
        q0 => input_20_q0);

    input_21_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_9_address0,
        ce0 => grp_cnn_fu_692_input_1_9_ce0,
        we0 => grp_cnn_fu_692_input_1_9_we0,
        d0 => grp_cnn_fu_692_input_1_9_d0,
        q0 => input_21_q0);

    input_22_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_10_address0,
        ce0 => grp_cnn_fu_692_input_1_10_ce0,
        we0 => grp_cnn_fu_692_input_1_10_we0,
        d0 => grp_cnn_fu_692_input_1_10_d0,
        q0 => input_22_q0);

    input_23_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_1_11_address0,
        ce0 => grp_cnn_fu_692_input_1_11_ce0,
        we0 => grp_cnn_fu_692_input_1_11_we0,
        d0 => grp_cnn_fu_692_input_1_11_d0,
        q0 => input_23_q0);

    input_24_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_0_address0,
        ce0 => grp_cnn_fu_692_input_2_0_ce0,
        we0 => grp_cnn_fu_692_input_2_0_we0,
        d0 => grp_cnn_fu_692_input_2_0_d0,
        q0 => input_24_q0);

    input_25_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_1_address0,
        ce0 => grp_cnn_fu_692_input_2_1_ce0,
        we0 => grp_cnn_fu_692_input_2_1_we0,
        d0 => grp_cnn_fu_692_input_2_1_d0,
        q0 => input_25_q0);

    input_26_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_2_address0,
        ce0 => grp_cnn_fu_692_input_2_2_ce0,
        we0 => grp_cnn_fu_692_input_2_2_we0,
        d0 => grp_cnn_fu_692_input_2_2_d0,
        q0 => input_26_q0);

    input_27_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_3_address0,
        ce0 => grp_cnn_fu_692_input_2_3_ce0,
        we0 => grp_cnn_fu_692_input_2_3_we0,
        d0 => grp_cnn_fu_692_input_2_3_d0,
        q0 => input_27_q0);

    input_28_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_4_address0,
        ce0 => grp_cnn_fu_692_input_2_4_ce0,
        we0 => grp_cnn_fu_692_input_2_4_we0,
        d0 => grp_cnn_fu_692_input_2_4_d0,
        q0 => input_28_q0);

    input_29_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_5_address0,
        ce0 => grp_cnn_fu_692_input_2_5_ce0,
        we0 => grp_cnn_fu_692_input_2_5_we0,
        d0 => grp_cnn_fu_692_input_2_5_d0,
        q0 => input_29_q0);

    input_30_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_6_address0,
        ce0 => grp_cnn_fu_692_input_2_6_ce0,
        we0 => grp_cnn_fu_692_input_2_6_we0,
        d0 => grp_cnn_fu_692_input_2_6_d0,
        q0 => input_30_q0);

    input_31_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_7_address0,
        ce0 => grp_cnn_fu_692_input_2_7_ce0,
        we0 => grp_cnn_fu_692_input_2_7_we0,
        d0 => grp_cnn_fu_692_input_2_7_d0,
        q0 => input_31_q0);

    input_32_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_8_address0,
        ce0 => grp_cnn_fu_692_input_2_8_ce0,
        we0 => grp_cnn_fu_692_input_2_8_we0,
        d0 => grp_cnn_fu_692_input_2_8_d0,
        q0 => input_32_q0);

    input_33_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_9_address0,
        ce0 => grp_cnn_fu_692_input_2_9_ce0,
        we0 => grp_cnn_fu_692_input_2_9_we0,
        d0 => grp_cnn_fu_692_input_2_9_d0,
        q0 => input_33_q0);

    input_34_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_10_address0,
        ce0 => grp_cnn_fu_692_input_2_10_ce0,
        we0 => grp_cnn_fu_692_input_2_10_we0,
        d0 => grp_cnn_fu_692_input_2_10_d0,
        q0 => input_34_q0);

    input_35_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_2_11_address0,
        ce0 => grp_cnn_fu_692_input_2_11_ce0,
        we0 => grp_cnn_fu_692_input_2_11_we0,
        d0 => grp_cnn_fu_692_input_2_11_d0,
        q0 => input_35_q0);

    input_36_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_0_address0,
        ce0 => grp_cnn_fu_692_input_3_0_ce0,
        we0 => grp_cnn_fu_692_input_3_0_we0,
        d0 => grp_cnn_fu_692_input_3_0_d0,
        q0 => input_36_q0);

    input_37_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_1_address0,
        ce0 => grp_cnn_fu_692_input_3_1_ce0,
        we0 => grp_cnn_fu_692_input_3_1_we0,
        d0 => grp_cnn_fu_692_input_3_1_d0,
        q0 => input_37_q0);

    input_38_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_2_address0,
        ce0 => grp_cnn_fu_692_input_3_2_ce0,
        we0 => grp_cnn_fu_692_input_3_2_we0,
        d0 => grp_cnn_fu_692_input_3_2_d0,
        q0 => input_38_q0);

    input_39_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_3_address0,
        ce0 => grp_cnn_fu_692_input_3_3_ce0,
        we0 => grp_cnn_fu_692_input_3_3_we0,
        d0 => grp_cnn_fu_692_input_3_3_d0,
        q0 => input_39_q0);

    input_40_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_4_address0,
        ce0 => grp_cnn_fu_692_input_3_4_ce0,
        we0 => grp_cnn_fu_692_input_3_4_we0,
        d0 => grp_cnn_fu_692_input_3_4_d0,
        q0 => input_40_q0);

    input_41_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_5_address0,
        ce0 => grp_cnn_fu_692_input_3_5_ce0,
        we0 => grp_cnn_fu_692_input_3_5_we0,
        d0 => grp_cnn_fu_692_input_3_5_d0,
        q0 => input_41_q0);

    input_42_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_6_address0,
        ce0 => grp_cnn_fu_692_input_3_6_ce0,
        we0 => grp_cnn_fu_692_input_3_6_we0,
        d0 => grp_cnn_fu_692_input_3_6_d0,
        q0 => input_42_q0);

    input_43_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_7_address0,
        ce0 => grp_cnn_fu_692_input_3_7_ce0,
        we0 => grp_cnn_fu_692_input_3_7_we0,
        d0 => grp_cnn_fu_692_input_3_7_d0,
        q0 => input_43_q0);

    input_44_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_8_address0,
        ce0 => grp_cnn_fu_692_input_3_8_ce0,
        we0 => grp_cnn_fu_692_input_3_8_we0,
        d0 => grp_cnn_fu_692_input_3_8_d0,
        q0 => input_44_q0);

    input_45_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_9_address0,
        ce0 => grp_cnn_fu_692_input_3_9_ce0,
        we0 => grp_cnn_fu_692_input_3_9_we0,
        d0 => grp_cnn_fu_692_input_3_9_d0,
        q0 => input_45_q0);

    input_46_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_10_address0,
        ce0 => grp_cnn_fu_692_input_3_10_ce0,
        we0 => grp_cnn_fu_692_input_3_10_we0,
        d0 => grp_cnn_fu_692_input_3_10_d0,
        q0 => input_46_q0);

    input_47_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_3_11_address0,
        ce0 => grp_cnn_fu_692_input_3_11_ce0,
        we0 => grp_cnn_fu_692_input_3_11_we0,
        d0 => grp_cnn_fu_692_input_3_11_d0,
        q0 => input_47_q0);

    input_48_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_0_address0,
        ce0 => grp_cnn_fu_692_input_4_0_ce0,
        we0 => grp_cnn_fu_692_input_4_0_we0,
        d0 => grp_cnn_fu_692_input_4_0_d0,
        q0 => input_48_q0);

    input_49_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_1_address0,
        ce0 => grp_cnn_fu_692_input_4_1_ce0,
        we0 => grp_cnn_fu_692_input_4_1_we0,
        d0 => grp_cnn_fu_692_input_4_1_d0,
        q0 => input_49_q0);

    input_50_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_2_address0,
        ce0 => grp_cnn_fu_692_input_4_2_ce0,
        we0 => grp_cnn_fu_692_input_4_2_we0,
        d0 => grp_cnn_fu_692_input_4_2_d0,
        q0 => input_50_q0);

    input_51_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_3_address0,
        ce0 => grp_cnn_fu_692_input_4_3_ce0,
        we0 => grp_cnn_fu_692_input_4_3_we0,
        d0 => grp_cnn_fu_692_input_4_3_d0,
        q0 => input_51_q0);

    input_52_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_4_address0,
        ce0 => grp_cnn_fu_692_input_4_4_ce0,
        we0 => grp_cnn_fu_692_input_4_4_we0,
        d0 => grp_cnn_fu_692_input_4_4_d0,
        q0 => input_52_q0);

    input_53_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_5_address0,
        ce0 => grp_cnn_fu_692_input_4_5_ce0,
        we0 => grp_cnn_fu_692_input_4_5_we0,
        d0 => grp_cnn_fu_692_input_4_5_d0,
        q0 => input_53_q0);

    input_54_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_6_address0,
        ce0 => grp_cnn_fu_692_input_4_6_ce0,
        we0 => grp_cnn_fu_692_input_4_6_we0,
        d0 => grp_cnn_fu_692_input_4_6_d0,
        q0 => input_54_q0);

    input_55_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_7_address0,
        ce0 => grp_cnn_fu_692_input_4_7_ce0,
        we0 => grp_cnn_fu_692_input_4_7_we0,
        d0 => grp_cnn_fu_692_input_4_7_d0,
        q0 => input_55_q0);

    input_56_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_8_address0,
        ce0 => grp_cnn_fu_692_input_4_8_ce0,
        we0 => grp_cnn_fu_692_input_4_8_we0,
        d0 => grp_cnn_fu_692_input_4_8_d0,
        q0 => input_56_q0);

    input_57_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_9_address0,
        ce0 => grp_cnn_fu_692_input_4_9_ce0,
        we0 => grp_cnn_fu_692_input_4_9_we0,
        d0 => grp_cnn_fu_692_input_4_9_d0,
        q0 => input_57_q0);

    input_58_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_10_address0,
        ce0 => grp_cnn_fu_692_input_4_10_ce0,
        we0 => grp_cnn_fu_692_input_4_10_we0,
        d0 => grp_cnn_fu_692_input_4_10_d0,
        q0 => input_58_q0);

    input_59_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_4_11_address0,
        ce0 => grp_cnn_fu_692_input_4_11_ce0,
        we0 => grp_cnn_fu_692_input_4_11_we0,
        d0 => grp_cnn_fu_692_input_4_11_d0,
        q0 => input_59_q0);

    input_60_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_0_address0,
        ce0 => grp_cnn_fu_692_input_5_0_ce0,
        we0 => grp_cnn_fu_692_input_5_0_we0,
        d0 => grp_cnn_fu_692_input_5_0_d0,
        q0 => input_60_q0);

    input_61_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_1_address0,
        ce0 => grp_cnn_fu_692_input_5_1_ce0,
        we0 => grp_cnn_fu_692_input_5_1_we0,
        d0 => grp_cnn_fu_692_input_5_1_d0,
        q0 => input_61_q0);

    input_62_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_2_address0,
        ce0 => grp_cnn_fu_692_input_5_2_ce0,
        we0 => grp_cnn_fu_692_input_5_2_we0,
        d0 => grp_cnn_fu_692_input_5_2_d0,
        q0 => input_62_q0);

    input_63_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_3_address0,
        ce0 => grp_cnn_fu_692_input_5_3_ce0,
        we0 => grp_cnn_fu_692_input_5_3_we0,
        d0 => grp_cnn_fu_692_input_5_3_d0,
        q0 => input_63_q0);

    input_64_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_4_address0,
        ce0 => grp_cnn_fu_692_input_5_4_ce0,
        we0 => grp_cnn_fu_692_input_5_4_we0,
        d0 => grp_cnn_fu_692_input_5_4_d0,
        q0 => input_64_q0);

    input_65_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_5_address0,
        ce0 => grp_cnn_fu_692_input_5_5_ce0,
        we0 => grp_cnn_fu_692_input_5_5_we0,
        d0 => grp_cnn_fu_692_input_5_5_d0,
        q0 => input_65_q0);

    input_66_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_6_address0,
        ce0 => grp_cnn_fu_692_input_5_6_ce0,
        we0 => grp_cnn_fu_692_input_5_6_we0,
        d0 => grp_cnn_fu_692_input_5_6_d0,
        q0 => input_66_q0);

    input_67_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_7_address0,
        ce0 => grp_cnn_fu_692_input_5_7_ce0,
        we0 => grp_cnn_fu_692_input_5_7_we0,
        d0 => grp_cnn_fu_692_input_5_7_d0,
        q0 => input_67_q0);

    input_68_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_8_address0,
        ce0 => grp_cnn_fu_692_input_5_8_ce0,
        we0 => grp_cnn_fu_692_input_5_8_we0,
        d0 => grp_cnn_fu_692_input_5_8_d0,
        q0 => input_68_q0);

    input_69_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_9_address0,
        ce0 => grp_cnn_fu_692_input_5_9_ce0,
        we0 => grp_cnn_fu_692_input_5_9_we0,
        d0 => grp_cnn_fu_692_input_5_9_d0,
        q0 => input_69_q0);

    input_70_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_10_address0,
        ce0 => grp_cnn_fu_692_input_5_10_ce0,
        we0 => grp_cnn_fu_692_input_5_10_we0,
        d0 => grp_cnn_fu_692_input_5_10_d0,
        q0 => input_70_q0);

    input_71_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_5_11_address0,
        ce0 => grp_cnn_fu_692_input_5_11_ce0,
        we0 => grp_cnn_fu_692_input_5_11_we0,
        d0 => grp_cnn_fu_692_input_5_11_d0,
        q0 => input_71_q0);

    input_72_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_0_address0,
        ce0 => grp_cnn_fu_692_input_6_0_ce0,
        we0 => grp_cnn_fu_692_input_6_0_we0,
        d0 => grp_cnn_fu_692_input_6_0_d0,
        q0 => input_72_q0);

    input_73_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_1_address0,
        ce0 => grp_cnn_fu_692_input_6_1_ce0,
        we0 => grp_cnn_fu_692_input_6_1_we0,
        d0 => grp_cnn_fu_692_input_6_1_d0,
        q0 => input_73_q0);

    input_74_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_2_address0,
        ce0 => grp_cnn_fu_692_input_6_2_ce0,
        we0 => grp_cnn_fu_692_input_6_2_we0,
        d0 => grp_cnn_fu_692_input_6_2_d0,
        q0 => input_74_q0);

    input_75_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_3_address0,
        ce0 => grp_cnn_fu_692_input_6_3_ce0,
        we0 => grp_cnn_fu_692_input_6_3_we0,
        d0 => grp_cnn_fu_692_input_6_3_d0,
        q0 => input_75_q0);

    input_76_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_4_address0,
        ce0 => grp_cnn_fu_692_input_6_4_ce0,
        we0 => grp_cnn_fu_692_input_6_4_we0,
        d0 => grp_cnn_fu_692_input_6_4_d0,
        q0 => input_76_q0);

    input_77_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_5_address0,
        ce0 => grp_cnn_fu_692_input_6_5_ce0,
        we0 => grp_cnn_fu_692_input_6_5_we0,
        d0 => grp_cnn_fu_692_input_6_5_d0,
        q0 => input_77_q0);

    input_78_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_6_address0,
        ce0 => grp_cnn_fu_692_input_6_6_ce0,
        we0 => grp_cnn_fu_692_input_6_6_we0,
        d0 => grp_cnn_fu_692_input_6_6_d0,
        q0 => input_78_q0);

    input_79_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_7_address0,
        ce0 => grp_cnn_fu_692_input_6_7_ce0,
        we0 => grp_cnn_fu_692_input_6_7_we0,
        d0 => grp_cnn_fu_692_input_6_7_d0,
        q0 => input_79_q0);

    input_80_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_8_address0,
        ce0 => grp_cnn_fu_692_input_6_8_ce0,
        we0 => grp_cnn_fu_692_input_6_8_we0,
        d0 => grp_cnn_fu_692_input_6_8_d0,
        q0 => input_80_q0);

    input_81_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_9_address0,
        ce0 => grp_cnn_fu_692_input_6_9_ce0,
        we0 => grp_cnn_fu_692_input_6_9_we0,
        d0 => grp_cnn_fu_692_input_6_9_d0,
        q0 => input_81_q0);

    input_82_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_10_address0,
        ce0 => grp_cnn_fu_692_input_6_10_ce0,
        we0 => grp_cnn_fu_692_input_6_10_we0,
        d0 => grp_cnn_fu_692_input_6_10_d0,
        q0 => input_82_q0);

    input_83_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_6_11_address0,
        ce0 => grp_cnn_fu_692_input_6_11_ce0,
        we0 => grp_cnn_fu_692_input_6_11_we0,
        d0 => grp_cnn_fu_692_input_6_11_d0,
        q0 => input_83_q0);

    input_84_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_0_address0,
        ce0 => grp_cnn_fu_692_input_7_0_ce0,
        we0 => grp_cnn_fu_692_input_7_0_we0,
        d0 => grp_cnn_fu_692_input_7_0_d0,
        q0 => input_84_q0);

    input_85_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_1_address0,
        ce0 => grp_cnn_fu_692_input_7_1_ce0,
        we0 => grp_cnn_fu_692_input_7_1_we0,
        d0 => grp_cnn_fu_692_input_7_1_d0,
        q0 => input_85_q0);

    input_86_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_2_address0,
        ce0 => grp_cnn_fu_692_input_7_2_ce0,
        we0 => grp_cnn_fu_692_input_7_2_we0,
        d0 => grp_cnn_fu_692_input_7_2_d0,
        q0 => input_86_q0);

    input_87_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_3_address0,
        ce0 => grp_cnn_fu_692_input_7_3_ce0,
        we0 => grp_cnn_fu_692_input_7_3_we0,
        d0 => grp_cnn_fu_692_input_7_3_d0,
        q0 => input_87_q0);

    input_88_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_4_address0,
        ce0 => grp_cnn_fu_692_input_7_4_ce0,
        we0 => grp_cnn_fu_692_input_7_4_we0,
        d0 => grp_cnn_fu_692_input_7_4_d0,
        q0 => input_88_q0);

    input_89_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_5_address0,
        ce0 => grp_cnn_fu_692_input_7_5_ce0,
        we0 => grp_cnn_fu_692_input_7_5_we0,
        d0 => grp_cnn_fu_692_input_7_5_d0,
        q0 => input_89_q0);

    input_90_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_6_address0,
        ce0 => grp_cnn_fu_692_input_7_6_ce0,
        we0 => grp_cnn_fu_692_input_7_6_we0,
        d0 => grp_cnn_fu_692_input_7_6_d0,
        q0 => input_90_q0);

    input_91_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_7_address0,
        ce0 => grp_cnn_fu_692_input_7_7_ce0,
        we0 => grp_cnn_fu_692_input_7_7_we0,
        d0 => grp_cnn_fu_692_input_7_7_d0,
        q0 => input_91_q0);

    input_92_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_8_address0,
        ce0 => grp_cnn_fu_692_input_7_8_ce0,
        we0 => grp_cnn_fu_692_input_7_8_we0,
        d0 => grp_cnn_fu_692_input_7_8_d0,
        q0 => input_92_q0);

    input_93_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_9_address0,
        ce0 => grp_cnn_fu_692_input_7_9_ce0,
        we0 => grp_cnn_fu_692_input_7_9_we0,
        d0 => grp_cnn_fu_692_input_7_9_d0,
        q0 => input_93_q0);

    input_94_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_10_address0,
        ce0 => grp_cnn_fu_692_input_7_10_ce0,
        we0 => grp_cnn_fu_692_input_7_10_we0,
        d0 => grp_cnn_fu_692_input_7_10_d0,
        q0 => input_94_q0);

    input_95_U : component kernel_cnn_input_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 551,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_input_7_11_address0,
        ce0 => grp_cnn_fu_692_input_7_11_ce0,
        we0 => grp_cnn_fu_692_input_7_11_we0,
        d0 => grp_cnn_fu_692_input_7_11_d0,
        q0 => input_95_q0);

    output_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_0_0_address0,
        ce0 => grp_cnn_fu_692_output_0_0_ce0,
        we0 => grp_cnn_fu_692_output_0_0_we0,
        d0 => grp_cnn_fu_692_output_0_0_d0,
        q0 => output_q0,
        address1 => grp_cnn_fu_692_output_0_0_address1,
        ce1 => grp_cnn_fu_692_output_0_0_ce1,
        we1 => grp_cnn_fu_692_output_0_0_we1,
        d1 => grp_cnn_fu_692_output_0_0_d1,
        q1 => output_q1);

    output_1_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_0_1_address0,
        ce0 => grp_cnn_fu_692_output_0_1_ce0,
        we0 => grp_cnn_fu_692_output_0_1_we0,
        d0 => grp_cnn_fu_692_output_0_1_d0,
        q0 => output_1_q0,
        address1 => grp_cnn_fu_692_output_0_1_address1,
        ce1 => grp_cnn_fu_692_output_0_1_ce1,
        we1 => grp_cnn_fu_692_output_0_1_we1,
        d1 => grp_cnn_fu_692_output_0_1_d1,
        q1 => output_1_q1);

    output_2_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_0_2_address0,
        ce0 => grp_cnn_fu_692_output_0_2_ce0,
        we0 => grp_cnn_fu_692_output_0_2_we0,
        d0 => grp_cnn_fu_692_output_0_2_d0,
        q0 => output_2_q0,
        address1 => grp_cnn_fu_692_output_0_2_address1,
        ce1 => grp_cnn_fu_692_output_0_2_ce1,
        we1 => grp_cnn_fu_692_output_0_2_we1,
        d1 => grp_cnn_fu_692_output_0_2_d1,
        q1 => output_2_q1);

    output_3_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_0_3_address0,
        ce0 => grp_cnn_fu_692_output_0_3_ce0,
        we0 => grp_cnn_fu_692_output_0_3_we0,
        d0 => grp_cnn_fu_692_output_0_3_d0,
        q0 => output_3_q0,
        address1 => grp_cnn_fu_692_output_0_3_address1,
        ce1 => grp_cnn_fu_692_output_0_3_ce1,
        we1 => grp_cnn_fu_692_output_0_3_we1,
        d1 => grp_cnn_fu_692_output_0_3_d1,
        q1 => output_3_q1);

    output_4_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_0_4_address0,
        ce0 => grp_cnn_fu_692_output_0_4_ce0,
        we0 => grp_cnn_fu_692_output_0_4_we0,
        d0 => grp_cnn_fu_692_output_0_4_d0,
        q0 => output_4_q0,
        address1 => grp_cnn_fu_692_output_0_4_address1,
        ce1 => grp_cnn_fu_692_output_0_4_ce1,
        we1 => grp_cnn_fu_692_output_0_4_we1,
        d1 => grp_cnn_fu_692_output_0_4_d1,
        q1 => output_4_q1);

    output_5_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_0_5_address0,
        ce0 => grp_cnn_fu_692_output_0_5_ce0,
        we0 => grp_cnn_fu_692_output_0_5_we0,
        d0 => grp_cnn_fu_692_output_0_5_d0,
        q0 => output_5_q0,
        address1 => grp_cnn_fu_692_output_0_5_address1,
        ce1 => grp_cnn_fu_692_output_0_5_ce1,
        we1 => grp_cnn_fu_692_output_0_5_we1,
        d1 => grp_cnn_fu_692_output_0_5_d1,
        q1 => output_5_q1);

    output_6_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_0_6_address0,
        ce0 => grp_cnn_fu_692_output_0_6_ce0,
        we0 => grp_cnn_fu_692_output_0_6_we0,
        d0 => grp_cnn_fu_692_output_0_6_d0,
        q0 => output_6_q0,
        address1 => grp_cnn_fu_692_output_0_6_address1,
        ce1 => grp_cnn_fu_692_output_0_6_ce1,
        we1 => grp_cnn_fu_692_output_0_6_we1,
        d1 => grp_cnn_fu_692_output_0_6_d1,
        q1 => output_6_q1);

    output_7_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_0_7_address0,
        ce0 => grp_cnn_fu_692_output_0_7_ce0,
        we0 => grp_cnn_fu_692_output_0_7_we0,
        d0 => grp_cnn_fu_692_output_0_7_d0,
        q0 => output_7_q0,
        address1 => grp_cnn_fu_692_output_0_7_address1,
        ce1 => grp_cnn_fu_692_output_0_7_ce1,
        we1 => grp_cnn_fu_692_output_0_7_we1,
        d1 => grp_cnn_fu_692_output_0_7_d1,
        q1 => output_7_q1);

    output_8_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_1_0_address0,
        ce0 => grp_cnn_fu_692_output_1_0_ce0,
        we0 => grp_cnn_fu_692_output_1_0_we0,
        d0 => grp_cnn_fu_692_output_1_0_d0,
        q0 => output_8_q0,
        address1 => grp_cnn_fu_692_output_1_0_address1,
        ce1 => grp_cnn_fu_692_output_1_0_ce1,
        we1 => grp_cnn_fu_692_output_1_0_we1,
        d1 => grp_cnn_fu_692_output_1_0_d1,
        q1 => output_8_q1);

    output_9_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_1_1_address0,
        ce0 => grp_cnn_fu_692_output_1_1_ce0,
        we0 => grp_cnn_fu_692_output_1_1_we0,
        d0 => grp_cnn_fu_692_output_1_1_d0,
        q0 => output_9_q0,
        address1 => grp_cnn_fu_692_output_1_1_address1,
        ce1 => grp_cnn_fu_692_output_1_1_ce1,
        we1 => grp_cnn_fu_692_output_1_1_we1,
        d1 => grp_cnn_fu_692_output_1_1_d1,
        q1 => output_9_q1);

    output_10_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_1_2_address0,
        ce0 => grp_cnn_fu_692_output_1_2_ce0,
        we0 => grp_cnn_fu_692_output_1_2_we0,
        d0 => grp_cnn_fu_692_output_1_2_d0,
        q0 => output_10_q0,
        address1 => grp_cnn_fu_692_output_1_2_address1,
        ce1 => grp_cnn_fu_692_output_1_2_ce1,
        we1 => grp_cnn_fu_692_output_1_2_we1,
        d1 => grp_cnn_fu_692_output_1_2_d1,
        q1 => output_10_q1);

    output_11_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_1_3_address0,
        ce0 => grp_cnn_fu_692_output_1_3_ce0,
        we0 => grp_cnn_fu_692_output_1_3_we0,
        d0 => grp_cnn_fu_692_output_1_3_d0,
        q0 => output_11_q0,
        address1 => grp_cnn_fu_692_output_1_3_address1,
        ce1 => grp_cnn_fu_692_output_1_3_ce1,
        we1 => grp_cnn_fu_692_output_1_3_we1,
        d1 => grp_cnn_fu_692_output_1_3_d1,
        q1 => output_11_q1);

    output_12_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_1_4_address0,
        ce0 => grp_cnn_fu_692_output_1_4_ce0,
        we0 => grp_cnn_fu_692_output_1_4_we0,
        d0 => grp_cnn_fu_692_output_1_4_d0,
        q0 => output_12_q0,
        address1 => grp_cnn_fu_692_output_1_4_address1,
        ce1 => grp_cnn_fu_692_output_1_4_ce1,
        we1 => grp_cnn_fu_692_output_1_4_we1,
        d1 => grp_cnn_fu_692_output_1_4_d1,
        q1 => output_12_q1);

    output_13_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_1_5_address0,
        ce0 => grp_cnn_fu_692_output_1_5_ce0,
        we0 => grp_cnn_fu_692_output_1_5_we0,
        d0 => grp_cnn_fu_692_output_1_5_d0,
        q0 => output_13_q0,
        address1 => grp_cnn_fu_692_output_1_5_address1,
        ce1 => grp_cnn_fu_692_output_1_5_ce1,
        we1 => grp_cnn_fu_692_output_1_5_we1,
        d1 => grp_cnn_fu_692_output_1_5_d1,
        q1 => output_13_q1);

    output_14_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_1_6_address0,
        ce0 => grp_cnn_fu_692_output_1_6_ce0,
        we0 => grp_cnn_fu_692_output_1_6_we0,
        d0 => grp_cnn_fu_692_output_1_6_d0,
        q0 => output_14_q0,
        address1 => grp_cnn_fu_692_output_1_6_address1,
        ce1 => grp_cnn_fu_692_output_1_6_ce1,
        we1 => grp_cnn_fu_692_output_1_6_we1,
        d1 => grp_cnn_fu_692_output_1_6_d1,
        q1 => output_14_q1);

    output_15_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_1_7_address0,
        ce0 => grp_cnn_fu_692_output_1_7_ce0,
        we0 => grp_cnn_fu_692_output_1_7_we0,
        d0 => grp_cnn_fu_692_output_1_7_d0,
        q0 => output_15_q0,
        address1 => grp_cnn_fu_692_output_1_7_address1,
        ce1 => grp_cnn_fu_692_output_1_7_ce1,
        we1 => grp_cnn_fu_692_output_1_7_we1,
        d1 => grp_cnn_fu_692_output_1_7_d1,
        q1 => output_15_q1);

    output_16_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_2_0_address0,
        ce0 => grp_cnn_fu_692_output_2_0_ce0,
        we0 => grp_cnn_fu_692_output_2_0_we0,
        d0 => grp_cnn_fu_692_output_2_0_d0,
        q0 => output_16_q0,
        address1 => grp_cnn_fu_692_output_2_0_address1,
        ce1 => grp_cnn_fu_692_output_2_0_ce1,
        we1 => grp_cnn_fu_692_output_2_0_we1,
        d1 => grp_cnn_fu_692_output_2_0_d1,
        q1 => output_16_q1);

    output_17_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_2_1_address0,
        ce0 => grp_cnn_fu_692_output_2_1_ce0,
        we0 => grp_cnn_fu_692_output_2_1_we0,
        d0 => grp_cnn_fu_692_output_2_1_d0,
        q0 => output_17_q0,
        address1 => grp_cnn_fu_692_output_2_1_address1,
        ce1 => grp_cnn_fu_692_output_2_1_ce1,
        we1 => grp_cnn_fu_692_output_2_1_we1,
        d1 => grp_cnn_fu_692_output_2_1_d1,
        q1 => output_17_q1);

    output_18_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_2_2_address0,
        ce0 => grp_cnn_fu_692_output_2_2_ce0,
        we0 => grp_cnn_fu_692_output_2_2_we0,
        d0 => grp_cnn_fu_692_output_2_2_d0,
        q0 => output_18_q0,
        address1 => grp_cnn_fu_692_output_2_2_address1,
        ce1 => grp_cnn_fu_692_output_2_2_ce1,
        we1 => grp_cnn_fu_692_output_2_2_we1,
        d1 => grp_cnn_fu_692_output_2_2_d1,
        q1 => output_18_q1);

    output_19_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_2_3_address0,
        ce0 => grp_cnn_fu_692_output_2_3_ce0,
        we0 => grp_cnn_fu_692_output_2_3_we0,
        d0 => grp_cnn_fu_692_output_2_3_d0,
        q0 => output_19_q0,
        address1 => grp_cnn_fu_692_output_2_3_address1,
        ce1 => grp_cnn_fu_692_output_2_3_ce1,
        we1 => grp_cnn_fu_692_output_2_3_we1,
        d1 => grp_cnn_fu_692_output_2_3_d1,
        q1 => output_19_q1);

    output_20_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_2_4_address0,
        ce0 => grp_cnn_fu_692_output_2_4_ce0,
        we0 => grp_cnn_fu_692_output_2_4_we0,
        d0 => grp_cnn_fu_692_output_2_4_d0,
        q0 => output_20_q0,
        address1 => grp_cnn_fu_692_output_2_4_address1,
        ce1 => grp_cnn_fu_692_output_2_4_ce1,
        we1 => grp_cnn_fu_692_output_2_4_we1,
        d1 => grp_cnn_fu_692_output_2_4_d1,
        q1 => output_20_q1);

    output_21_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_2_5_address0,
        ce0 => grp_cnn_fu_692_output_2_5_ce0,
        we0 => grp_cnn_fu_692_output_2_5_we0,
        d0 => grp_cnn_fu_692_output_2_5_d0,
        q0 => output_21_q0,
        address1 => grp_cnn_fu_692_output_2_5_address1,
        ce1 => grp_cnn_fu_692_output_2_5_ce1,
        we1 => grp_cnn_fu_692_output_2_5_we1,
        d1 => grp_cnn_fu_692_output_2_5_d1,
        q1 => output_21_q1);

    output_22_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_2_6_address0,
        ce0 => grp_cnn_fu_692_output_2_6_ce0,
        we0 => grp_cnn_fu_692_output_2_6_we0,
        d0 => grp_cnn_fu_692_output_2_6_d0,
        q0 => output_22_q0,
        address1 => grp_cnn_fu_692_output_2_6_address1,
        ce1 => grp_cnn_fu_692_output_2_6_ce1,
        we1 => grp_cnn_fu_692_output_2_6_we1,
        d1 => grp_cnn_fu_692_output_2_6_d1,
        q1 => output_22_q1);

    output_23_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_2_7_address0,
        ce0 => grp_cnn_fu_692_output_2_7_ce0,
        we0 => grp_cnn_fu_692_output_2_7_we0,
        d0 => grp_cnn_fu_692_output_2_7_d0,
        q0 => output_23_q0,
        address1 => grp_cnn_fu_692_output_2_7_address1,
        ce1 => grp_cnn_fu_692_output_2_7_ce1,
        we1 => grp_cnn_fu_692_output_2_7_we1,
        d1 => grp_cnn_fu_692_output_2_7_d1,
        q1 => output_23_q1);

    output_24_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_3_0_address0,
        ce0 => grp_cnn_fu_692_output_3_0_ce0,
        we0 => grp_cnn_fu_692_output_3_0_we0,
        d0 => grp_cnn_fu_692_output_3_0_d0,
        q0 => output_24_q0,
        address1 => grp_cnn_fu_692_output_3_0_address1,
        ce1 => grp_cnn_fu_692_output_3_0_ce1,
        we1 => grp_cnn_fu_692_output_3_0_we1,
        d1 => grp_cnn_fu_692_output_3_0_d1,
        q1 => output_24_q1);

    output_25_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_3_1_address0,
        ce0 => grp_cnn_fu_692_output_3_1_ce0,
        we0 => grp_cnn_fu_692_output_3_1_we0,
        d0 => grp_cnn_fu_692_output_3_1_d0,
        q0 => output_25_q0,
        address1 => grp_cnn_fu_692_output_3_1_address1,
        ce1 => grp_cnn_fu_692_output_3_1_ce1,
        we1 => grp_cnn_fu_692_output_3_1_we1,
        d1 => grp_cnn_fu_692_output_3_1_d1,
        q1 => output_25_q1);

    output_26_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_3_2_address0,
        ce0 => grp_cnn_fu_692_output_3_2_ce0,
        we0 => grp_cnn_fu_692_output_3_2_we0,
        d0 => grp_cnn_fu_692_output_3_2_d0,
        q0 => output_26_q0,
        address1 => grp_cnn_fu_692_output_3_2_address1,
        ce1 => grp_cnn_fu_692_output_3_2_ce1,
        we1 => grp_cnn_fu_692_output_3_2_we1,
        d1 => grp_cnn_fu_692_output_3_2_d1,
        q1 => output_26_q1);

    output_27_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_3_3_address0,
        ce0 => grp_cnn_fu_692_output_3_3_ce0,
        we0 => grp_cnn_fu_692_output_3_3_we0,
        d0 => grp_cnn_fu_692_output_3_3_d0,
        q0 => output_27_q0,
        address1 => grp_cnn_fu_692_output_3_3_address1,
        ce1 => grp_cnn_fu_692_output_3_3_ce1,
        we1 => grp_cnn_fu_692_output_3_3_we1,
        d1 => grp_cnn_fu_692_output_3_3_d1,
        q1 => output_27_q1);

    output_28_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_3_4_address0,
        ce0 => grp_cnn_fu_692_output_3_4_ce0,
        we0 => grp_cnn_fu_692_output_3_4_we0,
        d0 => grp_cnn_fu_692_output_3_4_d0,
        q0 => output_28_q0,
        address1 => grp_cnn_fu_692_output_3_4_address1,
        ce1 => grp_cnn_fu_692_output_3_4_ce1,
        we1 => grp_cnn_fu_692_output_3_4_we1,
        d1 => grp_cnn_fu_692_output_3_4_d1,
        q1 => output_28_q1);

    output_29_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_3_5_address0,
        ce0 => grp_cnn_fu_692_output_3_5_ce0,
        we0 => grp_cnn_fu_692_output_3_5_we0,
        d0 => grp_cnn_fu_692_output_3_5_d0,
        q0 => output_29_q0,
        address1 => grp_cnn_fu_692_output_3_5_address1,
        ce1 => grp_cnn_fu_692_output_3_5_ce1,
        we1 => grp_cnn_fu_692_output_3_5_we1,
        d1 => grp_cnn_fu_692_output_3_5_d1,
        q1 => output_29_q1);

    output_30_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_3_6_address0,
        ce0 => grp_cnn_fu_692_output_3_6_ce0,
        we0 => grp_cnn_fu_692_output_3_6_we0,
        d0 => grp_cnn_fu_692_output_3_6_d0,
        q0 => output_30_q0,
        address1 => grp_cnn_fu_692_output_3_6_address1,
        ce1 => grp_cnn_fu_692_output_3_6_ce1,
        we1 => grp_cnn_fu_692_output_3_6_we1,
        d1 => grp_cnn_fu_692_output_3_6_d1,
        q1 => output_30_q1);

    output_31_U : component kernel_cnn_output_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 25088,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_output_3_7_address0,
        ce0 => grp_cnn_fu_692_output_3_7_ce0,
        we0 => grp_cnn_fu_692_output_3_7_we0,
        d0 => grp_cnn_fu_692_output_3_7_d0,
        q0 => output_31_q0,
        address1 => grp_cnn_fu_692_output_3_7_address1,
        ce1 => grp_cnn_fu_692_output_3_7_ce1,
        we1 => grp_cnn_fu_692_output_3_7_we1,
        d1 => grp_cnn_fu_692_output_3_7_d1,
        q1 => output_31_q1);

    weight_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_0_0_address0,
        ce0 => grp_cnn_fu_692_weight_0_0_ce0,
        we0 => grp_cnn_fu_692_weight_0_0_we0,
        d0 => grp_cnn_fu_692_weight_0_0_d0,
        q0 => weight_q0);

    weight_1_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_0_1_address0,
        ce0 => grp_cnn_fu_692_weight_0_1_ce0,
        we0 => grp_cnn_fu_692_weight_0_1_we0,
        d0 => grp_cnn_fu_692_weight_0_1_d0,
        q0 => weight_1_q0);

    weight_2_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_0_2_address0,
        ce0 => grp_cnn_fu_692_weight_0_2_ce0,
        we0 => grp_cnn_fu_692_weight_0_2_we0,
        d0 => grp_cnn_fu_692_weight_0_2_d0,
        q0 => weight_2_q0);

    weight_3_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_0_3_address0,
        ce0 => grp_cnn_fu_692_weight_0_3_ce0,
        we0 => grp_cnn_fu_692_weight_0_3_we0,
        d0 => grp_cnn_fu_692_weight_0_3_d0,
        q0 => weight_3_q0);

    weight_4_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_0_4_address0,
        ce0 => grp_cnn_fu_692_weight_0_4_ce0,
        we0 => grp_cnn_fu_692_weight_0_4_we0,
        d0 => grp_cnn_fu_692_weight_0_4_d0,
        q0 => weight_4_q0);

    weight_5_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_1_0_address0,
        ce0 => grp_cnn_fu_692_weight_1_0_ce0,
        we0 => grp_cnn_fu_692_weight_1_0_we0,
        d0 => grp_cnn_fu_692_weight_1_0_d0,
        q0 => weight_5_q0);

    weight_6_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_1_1_address0,
        ce0 => grp_cnn_fu_692_weight_1_1_ce0,
        we0 => grp_cnn_fu_692_weight_1_1_we0,
        d0 => grp_cnn_fu_692_weight_1_1_d0,
        q0 => weight_6_q0);

    weight_7_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_1_2_address0,
        ce0 => grp_cnn_fu_692_weight_1_2_ce0,
        we0 => grp_cnn_fu_692_weight_1_2_we0,
        d0 => grp_cnn_fu_692_weight_1_2_d0,
        q0 => weight_7_q0);

    weight_8_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_1_3_address0,
        ce0 => grp_cnn_fu_692_weight_1_3_ce0,
        we0 => grp_cnn_fu_692_weight_1_3_we0,
        d0 => grp_cnn_fu_692_weight_1_3_d0,
        q0 => weight_8_q0);

    weight_9_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_1_4_address0,
        ce0 => grp_cnn_fu_692_weight_1_4_ce0,
        we0 => grp_cnn_fu_692_weight_1_4_we0,
        d0 => grp_cnn_fu_692_weight_1_4_d0,
        q0 => weight_9_q0);

    weight_10_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_2_0_address0,
        ce0 => grp_cnn_fu_692_weight_2_0_ce0,
        we0 => grp_cnn_fu_692_weight_2_0_we0,
        d0 => grp_cnn_fu_692_weight_2_0_d0,
        q0 => weight_10_q0);

    weight_11_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_2_1_address0,
        ce0 => grp_cnn_fu_692_weight_2_1_ce0,
        we0 => grp_cnn_fu_692_weight_2_1_we0,
        d0 => grp_cnn_fu_692_weight_2_1_d0,
        q0 => weight_11_q0);

    weight_12_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_2_2_address0,
        ce0 => grp_cnn_fu_692_weight_2_2_ce0,
        we0 => grp_cnn_fu_692_weight_2_2_we0,
        d0 => grp_cnn_fu_692_weight_2_2_d0,
        q0 => weight_12_q0);

    weight_13_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_2_3_address0,
        ce0 => grp_cnn_fu_692_weight_2_3_ce0,
        we0 => grp_cnn_fu_692_weight_2_3_we0,
        d0 => grp_cnn_fu_692_weight_2_3_d0,
        q0 => weight_13_q0);

    weight_14_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_2_4_address0,
        ce0 => grp_cnn_fu_692_weight_2_4_ce0,
        we0 => grp_cnn_fu_692_weight_2_4_we0,
        d0 => grp_cnn_fu_692_weight_2_4_d0,
        q0 => weight_14_q0);

    weight_15_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_3_0_address0,
        ce0 => grp_cnn_fu_692_weight_3_0_ce0,
        we0 => grp_cnn_fu_692_weight_3_0_we0,
        d0 => grp_cnn_fu_692_weight_3_0_d0,
        q0 => weight_15_q0);

    weight_16_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_3_1_address0,
        ce0 => grp_cnn_fu_692_weight_3_1_ce0,
        we0 => grp_cnn_fu_692_weight_3_1_we0,
        d0 => grp_cnn_fu_692_weight_3_1_d0,
        q0 => weight_16_q0);

    weight_17_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_3_2_address0,
        ce0 => grp_cnn_fu_692_weight_3_2_ce0,
        we0 => grp_cnn_fu_692_weight_3_2_we0,
        d0 => grp_cnn_fu_692_weight_3_2_d0,
        q0 => weight_17_q0);

    weight_18_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_3_3_address0,
        ce0 => grp_cnn_fu_692_weight_3_3_ce0,
        we0 => grp_cnn_fu_692_weight_3_3_we0,
        d0 => grp_cnn_fu_692_weight_3_3_d0,
        q0 => weight_18_q0);

    weight_19_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_3_4_address0,
        ce0 => grp_cnn_fu_692_weight_3_4_ce0,
        we0 => grp_cnn_fu_692_weight_3_4_we0,
        d0 => grp_cnn_fu_692_weight_3_4_d0,
        q0 => weight_19_q0);

    weight_20_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_4_0_address0,
        ce0 => grp_cnn_fu_692_weight_4_0_ce0,
        we0 => grp_cnn_fu_692_weight_4_0_we0,
        d0 => grp_cnn_fu_692_weight_4_0_d0,
        q0 => weight_20_q0);

    weight_21_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_4_1_address0,
        ce0 => grp_cnn_fu_692_weight_4_1_ce0,
        we0 => grp_cnn_fu_692_weight_4_1_we0,
        d0 => grp_cnn_fu_692_weight_4_1_d0,
        q0 => weight_21_q0);

    weight_22_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_4_2_address0,
        ce0 => grp_cnn_fu_692_weight_4_2_ce0,
        we0 => grp_cnn_fu_692_weight_4_2_we0,
        d0 => grp_cnn_fu_692_weight_4_2_d0,
        q0 => weight_22_q0);

    weight_23_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_4_3_address0,
        ce0 => grp_cnn_fu_692_weight_4_3_ce0,
        we0 => grp_cnn_fu_692_weight_4_3_we0,
        d0 => grp_cnn_fu_692_weight_4_3_d0,
        q0 => weight_23_q0);

    weight_24_U : component kernel_cnn_weight_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_cnn_fu_692_weight_4_4_address0,
        ce0 => grp_cnn_fu_692_weight_4_4_ce0,
        we0 => grp_cnn_fu_692_weight_4_4_we0,
        d0 => grp_cnn_fu_692_weight_4_4_d0,
        q0 => weight_24_q0);

    grp_cnn_fu_692 : component kernel_cnn_cnn
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_cnn_fu_692_ap_start,
        ap_done => grp_cnn_fu_692_ap_done,
        ap_idle => grp_cnn_fu_692_ap_idle,
        ap_ready => grp_cnn_fu_692_ap_ready,
        input_0_0_address0 => grp_cnn_fu_692_input_0_0_address0,
        input_0_0_ce0 => grp_cnn_fu_692_input_0_0_ce0,
        input_0_0_we0 => grp_cnn_fu_692_input_0_0_we0,
        input_0_0_d0 => grp_cnn_fu_692_input_0_0_d0,
        input_0_0_q0 => input_q0,
        input_0_1_address0 => grp_cnn_fu_692_input_0_1_address0,
        input_0_1_ce0 => grp_cnn_fu_692_input_0_1_ce0,
        input_0_1_we0 => grp_cnn_fu_692_input_0_1_we0,
        input_0_1_d0 => grp_cnn_fu_692_input_0_1_d0,
        input_0_1_q0 => input_1_q0,
        input_0_2_address0 => grp_cnn_fu_692_input_0_2_address0,
        input_0_2_ce0 => grp_cnn_fu_692_input_0_2_ce0,
        input_0_2_we0 => grp_cnn_fu_692_input_0_2_we0,
        input_0_2_d0 => grp_cnn_fu_692_input_0_2_d0,
        input_0_2_q0 => input_2_q0,
        input_0_3_address0 => grp_cnn_fu_692_input_0_3_address0,
        input_0_3_ce0 => grp_cnn_fu_692_input_0_3_ce0,
        input_0_3_we0 => grp_cnn_fu_692_input_0_3_we0,
        input_0_3_d0 => grp_cnn_fu_692_input_0_3_d0,
        input_0_3_q0 => input_3_q0,
        input_0_4_address0 => grp_cnn_fu_692_input_0_4_address0,
        input_0_4_ce0 => grp_cnn_fu_692_input_0_4_ce0,
        input_0_4_we0 => grp_cnn_fu_692_input_0_4_we0,
        input_0_4_d0 => grp_cnn_fu_692_input_0_4_d0,
        input_0_4_q0 => input_4_q0,
        input_0_5_address0 => grp_cnn_fu_692_input_0_5_address0,
        input_0_5_ce0 => grp_cnn_fu_692_input_0_5_ce0,
        input_0_5_we0 => grp_cnn_fu_692_input_0_5_we0,
        input_0_5_d0 => grp_cnn_fu_692_input_0_5_d0,
        input_0_5_q0 => input_5_q0,
        input_0_6_address0 => grp_cnn_fu_692_input_0_6_address0,
        input_0_6_ce0 => grp_cnn_fu_692_input_0_6_ce0,
        input_0_6_we0 => grp_cnn_fu_692_input_0_6_we0,
        input_0_6_d0 => grp_cnn_fu_692_input_0_6_d0,
        input_0_6_q0 => input_6_q0,
        input_0_7_address0 => grp_cnn_fu_692_input_0_7_address0,
        input_0_7_ce0 => grp_cnn_fu_692_input_0_7_ce0,
        input_0_7_we0 => grp_cnn_fu_692_input_0_7_we0,
        input_0_7_d0 => grp_cnn_fu_692_input_0_7_d0,
        input_0_7_q0 => input_7_q0,
        input_0_8_address0 => grp_cnn_fu_692_input_0_8_address0,
        input_0_8_ce0 => grp_cnn_fu_692_input_0_8_ce0,
        input_0_8_we0 => grp_cnn_fu_692_input_0_8_we0,
        input_0_8_d0 => grp_cnn_fu_692_input_0_8_d0,
        input_0_8_q0 => input_8_q0,
        input_0_9_address0 => grp_cnn_fu_692_input_0_9_address0,
        input_0_9_ce0 => grp_cnn_fu_692_input_0_9_ce0,
        input_0_9_we0 => grp_cnn_fu_692_input_0_9_we0,
        input_0_9_d0 => grp_cnn_fu_692_input_0_9_d0,
        input_0_9_q0 => input_9_q0,
        input_0_10_address0 => grp_cnn_fu_692_input_0_10_address0,
        input_0_10_ce0 => grp_cnn_fu_692_input_0_10_ce0,
        input_0_10_we0 => grp_cnn_fu_692_input_0_10_we0,
        input_0_10_d0 => grp_cnn_fu_692_input_0_10_d0,
        input_0_10_q0 => input_10_q0,
        input_0_11_address0 => grp_cnn_fu_692_input_0_11_address0,
        input_0_11_ce0 => grp_cnn_fu_692_input_0_11_ce0,
        input_0_11_we0 => grp_cnn_fu_692_input_0_11_we0,
        input_0_11_d0 => grp_cnn_fu_692_input_0_11_d0,
        input_0_11_q0 => input_11_q0,
        input_1_0_address0 => grp_cnn_fu_692_input_1_0_address0,
        input_1_0_ce0 => grp_cnn_fu_692_input_1_0_ce0,
        input_1_0_we0 => grp_cnn_fu_692_input_1_0_we0,
        input_1_0_d0 => grp_cnn_fu_692_input_1_0_d0,
        input_1_0_q0 => input_12_q0,
        input_1_1_address0 => grp_cnn_fu_692_input_1_1_address0,
        input_1_1_ce0 => grp_cnn_fu_692_input_1_1_ce0,
        input_1_1_we0 => grp_cnn_fu_692_input_1_1_we0,
        input_1_1_d0 => grp_cnn_fu_692_input_1_1_d0,
        input_1_1_q0 => input_13_q0,
        input_1_2_address0 => grp_cnn_fu_692_input_1_2_address0,
        input_1_2_ce0 => grp_cnn_fu_692_input_1_2_ce0,
        input_1_2_we0 => grp_cnn_fu_692_input_1_2_we0,
        input_1_2_d0 => grp_cnn_fu_692_input_1_2_d0,
        input_1_2_q0 => input_14_q0,
        input_1_3_address0 => grp_cnn_fu_692_input_1_3_address0,
        input_1_3_ce0 => grp_cnn_fu_692_input_1_3_ce0,
        input_1_3_we0 => grp_cnn_fu_692_input_1_3_we0,
        input_1_3_d0 => grp_cnn_fu_692_input_1_3_d0,
        input_1_3_q0 => input_15_q0,
        input_1_4_address0 => grp_cnn_fu_692_input_1_4_address0,
        input_1_4_ce0 => grp_cnn_fu_692_input_1_4_ce0,
        input_1_4_we0 => grp_cnn_fu_692_input_1_4_we0,
        input_1_4_d0 => grp_cnn_fu_692_input_1_4_d0,
        input_1_4_q0 => input_16_q0,
        input_1_5_address0 => grp_cnn_fu_692_input_1_5_address0,
        input_1_5_ce0 => grp_cnn_fu_692_input_1_5_ce0,
        input_1_5_we0 => grp_cnn_fu_692_input_1_5_we0,
        input_1_5_d0 => grp_cnn_fu_692_input_1_5_d0,
        input_1_5_q0 => input_17_q0,
        input_1_6_address0 => grp_cnn_fu_692_input_1_6_address0,
        input_1_6_ce0 => grp_cnn_fu_692_input_1_6_ce0,
        input_1_6_we0 => grp_cnn_fu_692_input_1_6_we0,
        input_1_6_d0 => grp_cnn_fu_692_input_1_6_d0,
        input_1_6_q0 => input_18_q0,
        input_1_7_address0 => grp_cnn_fu_692_input_1_7_address0,
        input_1_7_ce0 => grp_cnn_fu_692_input_1_7_ce0,
        input_1_7_we0 => grp_cnn_fu_692_input_1_7_we0,
        input_1_7_d0 => grp_cnn_fu_692_input_1_7_d0,
        input_1_7_q0 => input_19_q0,
        input_1_8_address0 => grp_cnn_fu_692_input_1_8_address0,
        input_1_8_ce0 => grp_cnn_fu_692_input_1_8_ce0,
        input_1_8_we0 => grp_cnn_fu_692_input_1_8_we0,
        input_1_8_d0 => grp_cnn_fu_692_input_1_8_d0,
        input_1_8_q0 => input_20_q0,
        input_1_9_address0 => grp_cnn_fu_692_input_1_9_address0,
        input_1_9_ce0 => grp_cnn_fu_692_input_1_9_ce0,
        input_1_9_we0 => grp_cnn_fu_692_input_1_9_we0,
        input_1_9_d0 => grp_cnn_fu_692_input_1_9_d0,
        input_1_9_q0 => input_21_q0,
        input_1_10_address0 => grp_cnn_fu_692_input_1_10_address0,
        input_1_10_ce0 => grp_cnn_fu_692_input_1_10_ce0,
        input_1_10_we0 => grp_cnn_fu_692_input_1_10_we0,
        input_1_10_d0 => grp_cnn_fu_692_input_1_10_d0,
        input_1_10_q0 => input_22_q0,
        input_1_11_address0 => grp_cnn_fu_692_input_1_11_address0,
        input_1_11_ce0 => grp_cnn_fu_692_input_1_11_ce0,
        input_1_11_we0 => grp_cnn_fu_692_input_1_11_we0,
        input_1_11_d0 => grp_cnn_fu_692_input_1_11_d0,
        input_1_11_q0 => input_23_q0,
        input_2_0_address0 => grp_cnn_fu_692_input_2_0_address0,
        input_2_0_ce0 => grp_cnn_fu_692_input_2_0_ce0,
        input_2_0_we0 => grp_cnn_fu_692_input_2_0_we0,
        input_2_0_d0 => grp_cnn_fu_692_input_2_0_d0,
        input_2_0_q0 => input_24_q0,
        input_2_1_address0 => grp_cnn_fu_692_input_2_1_address0,
        input_2_1_ce0 => grp_cnn_fu_692_input_2_1_ce0,
        input_2_1_we0 => grp_cnn_fu_692_input_2_1_we0,
        input_2_1_d0 => grp_cnn_fu_692_input_2_1_d0,
        input_2_1_q0 => input_25_q0,
        input_2_2_address0 => grp_cnn_fu_692_input_2_2_address0,
        input_2_2_ce0 => grp_cnn_fu_692_input_2_2_ce0,
        input_2_2_we0 => grp_cnn_fu_692_input_2_2_we0,
        input_2_2_d0 => grp_cnn_fu_692_input_2_2_d0,
        input_2_2_q0 => input_26_q0,
        input_2_3_address0 => grp_cnn_fu_692_input_2_3_address0,
        input_2_3_ce0 => grp_cnn_fu_692_input_2_3_ce0,
        input_2_3_we0 => grp_cnn_fu_692_input_2_3_we0,
        input_2_3_d0 => grp_cnn_fu_692_input_2_3_d0,
        input_2_3_q0 => input_27_q0,
        input_2_4_address0 => grp_cnn_fu_692_input_2_4_address0,
        input_2_4_ce0 => grp_cnn_fu_692_input_2_4_ce0,
        input_2_4_we0 => grp_cnn_fu_692_input_2_4_we0,
        input_2_4_d0 => grp_cnn_fu_692_input_2_4_d0,
        input_2_4_q0 => input_28_q0,
        input_2_5_address0 => grp_cnn_fu_692_input_2_5_address0,
        input_2_5_ce0 => grp_cnn_fu_692_input_2_5_ce0,
        input_2_5_we0 => grp_cnn_fu_692_input_2_5_we0,
        input_2_5_d0 => grp_cnn_fu_692_input_2_5_d0,
        input_2_5_q0 => input_29_q0,
        input_2_6_address0 => grp_cnn_fu_692_input_2_6_address0,
        input_2_6_ce0 => grp_cnn_fu_692_input_2_6_ce0,
        input_2_6_we0 => grp_cnn_fu_692_input_2_6_we0,
        input_2_6_d0 => grp_cnn_fu_692_input_2_6_d0,
        input_2_6_q0 => input_30_q0,
        input_2_7_address0 => grp_cnn_fu_692_input_2_7_address0,
        input_2_7_ce0 => grp_cnn_fu_692_input_2_7_ce0,
        input_2_7_we0 => grp_cnn_fu_692_input_2_7_we0,
        input_2_7_d0 => grp_cnn_fu_692_input_2_7_d0,
        input_2_7_q0 => input_31_q0,
        input_2_8_address0 => grp_cnn_fu_692_input_2_8_address0,
        input_2_8_ce0 => grp_cnn_fu_692_input_2_8_ce0,
        input_2_8_we0 => grp_cnn_fu_692_input_2_8_we0,
        input_2_8_d0 => grp_cnn_fu_692_input_2_8_d0,
        input_2_8_q0 => input_32_q0,
        input_2_9_address0 => grp_cnn_fu_692_input_2_9_address0,
        input_2_9_ce0 => grp_cnn_fu_692_input_2_9_ce0,
        input_2_9_we0 => grp_cnn_fu_692_input_2_9_we0,
        input_2_9_d0 => grp_cnn_fu_692_input_2_9_d0,
        input_2_9_q0 => input_33_q0,
        input_2_10_address0 => grp_cnn_fu_692_input_2_10_address0,
        input_2_10_ce0 => grp_cnn_fu_692_input_2_10_ce0,
        input_2_10_we0 => grp_cnn_fu_692_input_2_10_we0,
        input_2_10_d0 => grp_cnn_fu_692_input_2_10_d0,
        input_2_10_q0 => input_34_q0,
        input_2_11_address0 => grp_cnn_fu_692_input_2_11_address0,
        input_2_11_ce0 => grp_cnn_fu_692_input_2_11_ce0,
        input_2_11_we0 => grp_cnn_fu_692_input_2_11_we0,
        input_2_11_d0 => grp_cnn_fu_692_input_2_11_d0,
        input_2_11_q0 => input_35_q0,
        input_3_0_address0 => grp_cnn_fu_692_input_3_0_address0,
        input_3_0_ce0 => grp_cnn_fu_692_input_3_0_ce0,
        input_3_0_we0 => grp_cnn_fu_692_input_3_0_we0,
        input_3_0_d0 => grp_cnn_fu_692_input_3_0_d0,
        input_3_0_q0 => input_36_q0,
        input_3_1_address0 => grp_cnn_fu_692_input_3_1_address0,
        input_3_1_ce0 => grp_cnn_fu_692_input_3_1_ce0,
        input_3_1_we0 => grp_cnn_fu_692_input_3_1_we0,
        input_3_1_d0 => grp_cnn_fu_692_input_3_1_d0,
        input_3_1_q0 => input_37_q0,
        input_3_2_address0 => grp_cnn_fu_692_input_3_2_address0,
        input_3_2_ce0 => grp_cnn_fu_692_input_3_2_ce0,
        input_3_2_we0 => grp_cnn_fu_692_input_3_2_we0,
        input_3_2_d0 => grp_cnn_fu_692_input_3_2_d0,
        input_3_2_q0 => input_38_q0,
        input_3_3_address0 => grp_cnn_fu_692_input_3_3_address0,
        input_3_3_ce0 => grp_cnn_fu_692_input_3_3_ce0,
        input_3_3_we0 => grp_cnn_fu_692_input_3_3_we0,
        input_3_3_d0 => grp_cnn_fu_692_input_3_3_d0,
        input_3_3_q0 => input_39_q0,
        input_3_4_address0 => grp_cnn_fu_692_input_3_4_address0,
        input_3_4_ce0 => grp_cnn_fu_692_input_3_4_ce0,
        input_3_4_we0 => grp_cnn_fu_692_input_3_4_we0,
        input_3_4_d0 => grp_cnn_fu_692_input_3_4_d0,
        input_3_4_q0 => input_40_q0,
        input_3_5_address0 => grp_cnn_fu_692_input_3_5_address0,
        input_3_5_ce0 => grp_cnn_fu_692_input_3_5_ce0,
        input_3_5_we0 => grp_cnn_fu_692_input_3_5_we0,
        input_3_5_d0 => grp_cnn_fu_692_input_3_5_d0,
        input_3_5_q0 => input_41_q0,
        input_3_6_address0 => grp_cnn_fu_692_input_3_6_address0,
        input_3_6_ce0 => grp_cnn_fu_692_input_3_6_ce0,
        input_3_6_we0 => grp_cnn_fu_692_input_3_6_we0,
        input_3_6_d0 => grp_cnn_fu_692_input_3_6_d0,
        input_3_6_q0 => input_42_q0,
        input_3_7_address0 => grp_cnn_fu_692_input_3_7_address0,
        input_3_7_ce0 => grp_cnn_fu_692_input_3_7_ce0,
        input_3_7_we0 => grp_cnn_fu_692_input_3_7_we0,
        input_3_7_d0 => grp_cnn_fu_692_input_3_7_d0,
        input_3_7_q0 => input_43_q0,
        input_3_8_address0 => grp_cnn_fu_692_input_3_8_address0,
        input_3_8_ce0 => grp_cnn_fu_692_input_3_8_ce0,
        input_3_8_we0 => grp_cnn_fu_692_input_3_8_we0,
        input_3_8_d0 => grp_cnn_fu_692_input_3_8_d0,
        input_3_8_q0 => input_44_q0,
        input_3_9_address0 => grp_cnn_fu_692_input_3_9_address0,
        input_3_9_ce0 => grp_cnn_fu_692_input_3_9_ce0,
        input_3_9_we0 => grp_cnn_fu_692_input_3_9_we0,
        input_3_9_d0 => grp_cnn_fu_692_input_3_9_d0,
        input_3_9_q0 => input_45_q0,
        input_3_10_address0 => grp_cnn_fu_692_input_3_10_address0,
        input_3_10_ce0 => grp_cnn_fu_692_input_3_10_ce0,
        input_3_10_we0 => grp_cnn_fu_692_input_3_10_we0,
        input_3_10_d0 => grp_cnn_fu_692_input_3_10_d0,
        input_3_10_q0 => input_46_q0,
        input_3_11_address0 => grp_cnn_fu_692_input_3_11_address0,
        input_3_11_ce0 => grp_cnn_fu_692_input_3_11_ce0,
        input_3_11_we0 => grp_cnn_fu_692_input_3_11_we0,
        input_3_11_d0 => grp_cnn_fu_692_input_3_11_d0,
        input_3_11_q0 => input_47_q0,
        input_4_0_address0 => grp_cnn_fu_692_input_4_0_address0,
        input_4_0_ce0 => grp_cnn_fu_692_input_4_0_ce0,
        input_4_0_we0 => grp_cnn_fu_692_input_4_0_we0,
        input_4_0_d0 => grp_cnn_fu_692_input_4_0_d0,
        input_4_0_q0 => input_48_q0,
        input_4_1_address0 => grp_cnn_fu_692_input_4_1_address0,
        input_4_1_ce0 => grp_cnn_fu_692_input_4_1_ce0,
        input_4_1_we0 => grp_cnn_fu_692_input_4_1_we0,
        input_4_1_d0 => grp_cnn_fu_692_input_4_1_d0,
        input_4_1_q0 => input_49_q0,
        input_4_2_address0 => grp_cnn_fu_692_input_4_2_address0,
        input_4_2_ce0 => grp_cnn_fu_692_input_4_2_ce0,
        input_4_2_we0 => grp_cnn_fu_692_input_4_2_we0,
        input_4_2_d0 => grp_cnn_fu_692_input_4_2_d0,
        input_4_2_q0 => input_50_q0,
        input_4_3_address0 => grp_cnn_fu_692_input_4_3_address0,
        input_4_3_ce0 => grp_cnn_fu_692_input_4_3_ce0,
        input_4_3_we0 => grp_cnn_fu_692_input_4_3_we0,
        input_4_3_d0 => grp_cnn_fu_692_input_4_3_d0,
        input_4_3_q0 => input_51_q0,
        input_4_4_address0 => grp_cnn_fu_692_input_4_4_address0,
        input_4_4_ce0 => grp_cnn_fu_692_input_4_4_ce0,
        input_4_4_we0 => grp_cnn_fu_692_input_4_4_we0,
        input_4_4_d0 => grp_cnn_fu_692_input_4_4_d0,
        input_4_4_q0 => input_52_q0,
        input_4_5_address0 => grp_cnn_fu_692_input_4_5_address0,
        input_4_5_ce0 => grp_cnn_fu_692_input_4_5_ce0,
        input_4_5_we0 => grp_cnn_fu_692_input_4_5_we0,
        input_4_5_d0 => grp_cnn_fu_692_input_4_5_d0,
        input_4_5_q0 => input_53_q0,
        input_4_6_address0 => grp_cnn_fu_692_input_4_6_address0,
        input_4_6_ce0 => grp_cnn_fu_692_input_4_6_ce0,
        input_4_6_we0 => grp_cnn_fu_692_input_4_6_we0,
        input_4_6_d0 => grp_cnn_fu_692_input_4_6_d0,
        input_4_6_q0 => input_54_q0,
        input_4_7_address0 => grp_cnn_fu_692_input_4_7_address0,
        input_4_7_ce0 => grp_cnn_fu_692_input_4_7_ce0,
        input_4_7_we0 => grp_cnn_fu_692_input_4_7_we0,
        input_4_7_d0 => grp_cnn_fu_692_input_4_7_d0,
        input_4_7_q0 => input_55_q0,
        input_4_8_address0 => grp_cnn_fu_692_input_4_8_address0,
        input_4_8_ce0 => grp_cnn_fu_692_input_4_8_ce0,
        input_4_8_we0 => grp_cnn_fu_692_input_4_8_we0,
        input_4_8_d0 => grp_cnn_fu_692_input_4_8_d0,
        input_4_8_q0 => input_56_q0,
        input_4_9_address0 => grp_cnn_fu_692_input_4_9_address0,
        input_4_9_ce0 => grp_cnn_fu_692_input_4_9_ce0,
        input_4_9_we0 => grp_cnn_fu_692_input_4_9_we0,
        input_4_9_d0 => grp_cnn_fu_692_input_4_9_d0,
        input_4_9_q0 => input_57_q0,
        input_4_10_address0 => grp_cnn_fu_692_input_4_10_address0,
        input_4_10_ce0 => grp_cnn_fu_692_input_4_10_ce0,
        input_4_10_we0 => grp_cnn_fu_692_input_4_10_we0,
        input_4_10_d0 => grp_cnn_fu_692_input_4_10_d0,
        input_4_10_q0 => input_58_q0,
        input_4_11_address0 => grp_cnn_fu_692_input_4_11_address0,
        input_4_11_ce0 => grp_cnn_fu_692_input_4_11_ce0,
        input_4_11_we0 => grp_cnn_fu_692_input_4_11_we0,
        input_4_11_d0 => grp_cnn_fu_692_input_4_11_d0,
        input_4_11_q0 => input_59_q0,
        input_5_0_address0 => grp_cnn_fu_692_input_5_0_address0,
        input_5_0_ce0 => grp_cnn_fu_692_input_5_0_ce0,
        input_5_0_we0 => grp_cnn_fu_692_input_5_0_we0,
        input_5_0_d0 => grp_cnn_fu_692_input_5_0_d0,
        input_5_0_q0 => input_60_q0,
        input_5_1_address0 => grp_cnn_fu_692_input_5_1_address0,
        input_5_1_ce0 => grp_cnn_fu_692_input_5_1_ce0,
        input_5_1_we0 => grp_cnn_fu_692_input_5_1_we0,
        input_5_1_d0 => grp_cnn_fu_692_input_5_1_d0,
        input_5_1_q0 => input_61_q0,
        input_5_2_address0 => grp_cnn_fu_692_input_5_2_address0,
        input_5_2_ce0 => grp_cnn_fu_692_input_5_2_ce0,
        input_5_2_we0 => grp_cnn_fu_692_input_5_2_we0,
        input_5_2_d0 => grp_cnn_fu_692_input_5_2_d0,
        input_5_2_q0 => input_62_q0,
        input_5_3_address0 => grp_cnn_fu_692_input_5_3_address0,
        input_5_3_ce0 => grp_cnn_fu_692_input_5_3_ce0,
        input_5_3_we0 => grp_cnn_fu_692_input_5_3_we0,
        input_5_3_d0 => grp_cnn_fu_692_input_5_3_d0,
        input_5_3_q0 => input_63_q0,
        input_5_4_address0 => grp_cnn_fu_692_input_5_4_address0,
        input_5_4_ce0 => grp_cnn_fu_692_input_5_4_ce0,
        input_5_4_we0 => grp_cnn_fu_692_input_5_4_we0,
        input_5_4_d0 => grp_cnn_fu_692_input_5_4_d0,
        input_5_4_q0 => input_64_q0,
        input_5_5_address0 => grp_cnn_fu_692_input_5_5_address0,
        input_5_5_ce0 => grp_cnn_fu_692_input_5_5_ce0,
        input_5_5_we0 => grp_cnn_fu_692_input_5_5_we0,
        input_5_5_d0 => grp_cnn_fu_692_input_5_5_d0,
        input_5_5_q0 => input_65_q0,
        input_5_6_address0 => grp_cnn_fu_692_input_5_6_address0,
        input_5_6_ce0 => grp_cnn_fu_692_input_5_6_ce0,
        input_5_6_we0 => grp_cnn_fu_692_input_5_6_we0,
        input_5_6_d0 => grp_cnn_fu_692_input_5_6_d0,
        input_5_6_q0 => input_66_q0,
        input_5_7_address0 => grp_cnn_fu_692_input_5_7_address0,
        input_5_7_ce0 => grp_cnn_fu_692_input_5_7_ce0,
        input_5_7_we0 => grp_cnn_fu_692_input_5_7_we0,
        input_5_7_d0 => grp_cnn_fu_692_input_5_7_d0,
        input_5_7_q0 => input_67_q0,
        input_5_8_address0 => grp_cnn_fu_692_input_5_8_address0,
        input_5_8_ce0 => grp_cnn_fu_692_input_5_8_ce0,
        input_5_8_we0 => grp_cnn_fu_692_input_5_8_we0,
        input_5_8_d0 => grp_cnn_fu_692_input_5_8_d0,
        input_5_8_q0 => input_68_q0,
        input_5_9_address0 => grp_cnn_fu_692_input_5_9_address0,
        input_5_9_ce0 => grp_cnn_fu_692_input_5_9_ce0,
        input_5_9_we0 => grp_cnn_fu_692_input_5_9_we0,
        input_5_9_d0 => grp_cnn_fu_692_input_5_9_d0,
        input_5_9_q0 => input_69_q0,
        input_5_10_address0 => grp_cnn_fu_692_input_5_10_address0,
        input_5_10_ce0 => grp_cnn_fu_692_input_5_10_ce0,
        input_5_10_we0 => grp_cnn_fu_692_input_5_10_we0,
        input_5_10_d0 => grp_cnn_fu_692_input_5_10_d0,
        input_5_10_q0 => input_70_q0,
        input_5_11_address0 => grp_cnn_fu_692_input_5_11_address0,
        input_5_11_ce0 => grp_cnn_fu_692_input_5_11_ce0,
        input_5_11_we0 => grp_cnn_fu_692_input_5_11_we0,
        input_5_11_d0 => grp_cnn_fu_692_input_5_11_d0,
        input_5_11_q0 => input_71_q0,
        input_6_0_address0 => grp_cnn_fu_692_input_6_0_address0,
        input_6_0_ce0 => grp_cnn_fu_692_input_6_0_ce0,
        input_6_0_we0 => grp_cnn_fu_692_input_6_0_we0,
        input_6_0_d0 => grp_cnn_fu_692_input_6_0_d0,
        input_6_0_q0 => input_72_q0,
        input_6_1_address0 => grp_cnn_fu_692_input_6_1_address0,
        input_6_1_ce0 => grp_cnn_fu_692_input_6_1_ce0,
        input_6_1_we0 => grp_cnn_fu_692_input_6_1_we0,
        input_6_1_d0 => grp_cnn_fu_692_input_6_1_d0,
        input_6_1_q0 => input_73_q0,
        input_6_2_address0 => grp_cnn_fu_692_input_6_2_address0,
        input_6_2_ce0 => grp_cnn_fu_692_input_6_2_ce0,
        input_6_2_we0 => grp_cnn_fu_692_input_6_2_we0,
        input_6_2_d0 => grp_cnn_fu_692_input_6_2_d0,
        input_6_2_q0 => input_74_q0,
        input_6_3_address0 => grp_cnn_fu_692_input_6_3_address0,
        input_6_3_ce0 => grp_cnn_fu_692_input_6_3_ce0,
        input_6_3_we0 => grp_cnn_fu_692_input_6_3_we0,
        input_6_3_d0 => grp_cnn_fu_692_input_6_3_d0,
        input_6_3_q0 => input_75_q0,
        input_6_4_address0 => grp_cnn_fu_692_input_6_4_address0,
        input_6_4_ce0 => grp_cnn_fu_692_input_6_4_ce0,
        input_6_4_we0 => grp_cnn_fu_692_input_6_4_we0,
        input_6_4_d0 => grp_cnn_fu_692_input_6_4_d0,
        input_6_4_q0 => input_76_q0,
        input_6_5_address0 => grp_cnn_fu_692_input_6_5_address0,
        input_6_5_ce0 => grp_cnn_fu_692_input_6_5_ce0,
        input_6_5_we0 => grp_cnn_fu_692_input_6_5_we0,
        input_6_5_d0 => grp_cnn_fu_692_input_6_5_d0,
        input_6_5_q0 => input_77_q0,
        input_6_6_address0 => grp_cnn_fu_692_input_6_6_address0,
        input_6_6_ce0 => grp_cnn_fu_692_input_6_6_ce0,
        input_6_6_we0 => grp_cnn_fu_692_input_6_6_we0,
        input_6_6_d0 => grp_cnn_fu_692_input_6_6_d0,
        input_6_6_q0 => input_78_q0,
        input_6_7_address0 => grp_cnn_fu_692_input_6_7_address0,
        input_6_7_ce0 => grp_cnn_fu_692_input_6_7_ce0,
        input_6_7_we0 => grp_cnn_fu_692_input_6_7_we0,
        input_6_7_d0 => grp_cnn_fu_692_input_6_7_d0,
        input_6_7_q0 => input_79_q0,
        input_6_8_address0 => grp_cnn_fu_692_input_6_8_address0,
        input_6_8_ce0 => grp_cnn_fu_692_input_6_8_ce0,
        input_6_8_we0 => grp_cnn_fu_692_input_6_8_we0,
        input_6_8_d0 => grp_cnn_fu_692_input_6_8_d0,
        input_6_8_q0 => input_80_q0,
        input_6_9_address0 => grp_cnn_fu_692_input_6_9_address0,
        input_6_9_ce0 => grp_cnn_fu_692_input_6_9_ce0,
        input_6_9_we0 => grp_cnn_fu_692_input_6_9_we0,
        input_6_9_d0 => grp_cnn_fu_692_input_6_9_d0,
        input_6_9_q0 => input_81_q0,
        input_6_10_address0 => grp_cnn_fu_692_input_6_10_address0,
        input_6_10_ce0 => grp_cnn_fu_692_input_6_10_ce0,
        input_6_10_we0 => grp_cnn_fu_692_input_6_10_we0,
        input_6_10_d0 => grp_cnn_fu_692_input_6_10_d0,
        input_6_10_q0 => input_82_q0,
        input_6_11_address0 => grp_cnn_fu_692_input_6_11_address0,
        input_6_11_ce0 => grp_cnn_fu_692_input_6_11_ce0,
        input_6_11_we0 => grp_cnn_fu_692_input_6_11_we0,
        input_6_11_d0 => grp_cnn_fu_692_input_6_11_d0,
        input_6_11_q0 => input_83_q0,
        input_7_0_address0 => grp_cnn_fu_692_input_7_0_address0,
        input_7_0_ce0 => grp_cnn_fu_692_input_7_0_ce0,
        input_7_0_we0 => grp_cnn_fu_692_input_7_0_we0,
        input_7_0_d0 => grp_cnn_fu_692_input_7_0_d0,
        input_7_0_q0 => input_84_q0,
        input_7_1_address0 => grp_cnn_fu_692_input_7_1_address0,
        input_7_1_ce0 => grp_cnn_fu_692_input_7_1_ce0,
        input_7_1_we0 => grp_cnn_fu_692_input_7_1_we0,
        input_7_1_d0 => grp_cnn_fu_692_input_7_1_d0,
        input_7_1_q0 => input_85_q0,
        input_7_2_address0 => grp_cnn_fu_692_input_7_2_address0,
        input_7_2_ce0 => grp_cnn_fu_692_input_7_2_ce0,
        input_7_2_we0 => grp_cnn_fu_692_input_7_2_we0,
        input_7_2_d0 => grp_cnn_fu_692_input_7_2_d0,
        input_7_2_q0 => input_86_q0,
        input_7_3_address0 => grp_cnn_fu_692_input_7_3_address0,
        input_7_3_ce0 => grp_cnn_fu_692_input_7_3_ce0,
        input_7_3_we0 => grp_cnn_fu_692_input_7_3_we0,
        input_7_3_d0 => grp_cnn_fu_692_input_7_3_d0,
        input_7_3_q0 => input_87_q0,
        input_7_4_address0 => grp_cnn_fu_692_input_7_4_address0,
        input_7_4_ce0 => grp_cnn_fu_692_input_7_4_ce0,
        input_7_4_we0 => grp_cnn_fu_692_input_7_4_we0,
        input_7_4_d0 => grp_cnn_fu_692_input_7_4_d0,
        input_7_4_q0 => input_88_q0,
        input_7_5_address0 => grp_cnn_fu_692_input_7_5_address0,
        input_7_5_ce0 => grp_cnn_fu_692_input_7_5_ce0,
        input_7_5_we0 => grp_cnn_fu_692_input_7_5_we0,
        input_7_5_d0 => grp_cnn_fu_692_input_7_5_d0,
        input_7_5_q0 => input_89_q0,
        input_7_6_address0 => grp_cnn_fu_692_input_7_6_address0,
        input_7_6_ce0 => grp_cnn_fu_692_input_7_6_ce0,
        input_7_6_we0 => grp_cnn_fu_692_input_7_6_we0,
        input_7_6_d0 => grp_cnn_fu_692_input_7_6_d0,
        input_7_6_q0 => input_90_q0,
        input_7_7_address0 => grp_cnn_fu_692_input_7_7_address0,
        input_7_7_ce0 => grp_cnn_fu_692_input_7_7_ce0,
        input_7_7_we0 => grp_cnn_fu_692_input_7_7_we0,
        input_7_7_d0 => grp_cnn_fu_692_input_7_7_d0,
        input_7_7_q0 => input_91_q0,
        input_7_8_address0 => grp_cnn_fu_692_input_7_8_address0,
        input_7_8_ce0 => grp_cnn_fu_692_input_7_8_ce0,
        input_7_8_we0 => grp_cnn_fu_692_input_7_8_we0,
        input_7_8_d0 => grp_cnn_fu_692_input_7_8_d0,
        input_7_8_q0 => input_92_q0,
        input_7_9_address0 => grp_cnn_fu_692_input_7_9_address0,
        input_7_9_ce0 => grp_cnn_fu_692_input_7_9_ce0,
        input_7_9_we0 => grp_cnn_fu_692_input_7_9_we0,
        input_7_9_d0 => grp_cnn_fu_692_input_7_9_d0,
        input_7_9_q0 => input_93_q0,
        input_7_10_address0 => grp_cnn_fu_692_input_7_10_address0,
        input_7_10_ce0 => grp_cnn_fu_692_input_7_10_ce0,
        input_7_10_we0 => grp_cnn_fu_692_input_7_10_we0,
        input_7_10_d0 => grp_cnn_fu_692_input_7_10_d0,
        input_7_10_q0 => input_94_q0,
        input_7_11_address0 => grp_cnn_fu_692_input_7_11_address0,
        input_7_11_ce0 => grp_cnn_fu_692_input_7_11_ce0,
        input_7_11_we0 => grp_cnn_fu_692_input_7_11_we0,
        input_7_11_d0 => grp_cnn_fu_692_input_7_11_d0,
        input_7_11_q0 => input_95_q0,
        output_0_0_address0 => grp_cnn_fu_692_output_0_0_address0,
        output_0_0_ce0 => grp_cnn_fu_692_output_0_0_ce0,
        output_0_0_we0 => grp_cnn_fu_692_output_0_0_we0,
        output_0_0_d0 => grp_cnn_fu_692_output_0_0_d0,
        output_0_0_q0 => output_q0,
        output_0_0_address1 => grp_cnn_fu_692_output_0_0_address1,
        output_0_0_ce1 => grp_cnn_fu_692_output_0_0_ce1,
        output_0_0_we1 => grp_cnn_fu_692_output_0_0_we1,
        output_0_0_d1 => grp_cnn_fu_692_output_0_0_d1,
        output_0_0_q1 => output_q1,
        output_0_1_address0 => grp_cnn_fu_692_output_0_1_address0,
        output_0_1_ce0 => grp_cnn_fu_692_output_0_1_ce0,
        output_0_1_we0 => grp_cnn_fu_692_output_0_1_we0,
        output_0_1_d0 => grp_cnn_fu_692_output_0_1_d0,
        output_0_1_q0 => output_1_q0,
        output_0_1_address1 => grp_cnn_fu_692_output_0_1_address1,
        output_0_1_ce1 => grp_cnn_fu_692_output_0_1_ce1,
        output_0_1_we1 => grp_cnn_fu_692_output_0_1_we1,
        output_0_1_d1 => grp_cnn_fu_692_output_0_1_d1,
        output_0_1_q1 => output_1_q1,
        output_0_2_address0 => grp_cnn_fu_692_output_0_2_address0,
        output_0_2_ce0 => grp_cnn_fu_692_output_0_2_ce0,
        output_0_2_we0 => grp_cnn_fu_692_output_0_2_we0,
        output_0_2_d0 => grp_cnn_fu_692_output_0_2_d0,
        output_0_2_q0 => output_2_q0,
        output_0_2_address1 => grp_cnn_fu_692_output_0_2_address1,
        output_0_2_ce1 => grp_cnn_fu_692_output_0_2_ce1,
        output_0_2_we1 => grp_cnn_fu_692_output_0_2_we1,
        output_0_2_d1 => grp_cnn_fu_692_output_0_2_d1,
        output_0_2_q1 => output_2_q1,
        output_0_3_address0 => grp_cnn_fu_692_output_0_3_address0,
        output_0_3_ce0 => grp_cnn_fu_692_output_0_3_ce0,
        output_0_3_we0 => grp_cnn_fu_692_output_0_3_we0,
        output_0_3_d0 => grp_cnn_fu_692_output_0_3_d0,
        output_0_3_q0 => output_3_q0,
        output_0_3_address1 => grp_cnn_fu_692_output_0_3_address1,
        output_0_3_ce1 => grp_cnn_fu_692_output_0_3_ce1,
        output_0_3_we1 => grp_cnn_fu_692_output_0_3_we1,
        output_0_3_d1 => grp_cnn_fu_692_output_0_3_d1,
        output_0_3_q1 => output_3_q1,
        output_0_4_address0 => grp_cnn_fu_692_output_0_4_address0,
        output_0_4_ce0 => grp_cnn_fu_692_output_0_4_ce0,
        output_0_4_we0 => grp_cnn_fu_692_output_0_4_we0,
        output_0_4_d0 => grp_cnn_fu_692_output_0_4_d0,
        output_0_4_q0 => output_4_q0,
        output_0_4_address1 => grp_cnn_fu_692_output_0_4_address1,
        output_0_4_ce1 => grp_cnn_fu_692_output_0_4_ce1,
        output_0_4_we1 => grp_cnn_fu_692_output_0_4_we1,
        output_0_4_d1 => grp_cnn_fu_692_output_0_4_d1,
        output_0_4_q1 => output_4_q1,
        output_0_5_address0 => grp_cnn_fu_692_output_0_5_address0,
        output_0_5_ce0 => grp_cnn_fu_692_output_0_5_ce0,
        output_0_5_we0 => grp_cnn_fu_692_output_0_5_we0,
        output_0_5_d0 => grp_cnn_fu_692_output_0_5_d0,
        output_0_5_q0 => output_5_q0,
        output_0_5_address1 => grp_cnn_fu_692_output_0_5_address1,
        output_0_5_ce1 => grp_cnn_fu_692_output_0_5_ce1,
        output_0_5_we1 => grp_cnn_fu_692_output_0_5_we1,
        output_0_5_d1 => grp_cnn_fu_692_output_0_5_d1,
        output_0_5_q1 => output_5_q1,
        output_0_6_address0 => grp_cnn_fu_692_output_0_6_address0,
        output_0_6_ce0 => grp_cnn_fu_692_output_0_6_ce0,
        output_0_6_we0 => grp_cnn_fu_692_output_0_6_we0,
        output_0_6_d0 => grp_cnn_fu_692_output_0_6_d0,
        output_0_6_q0 => output_6_q0,
        output_0_6_address1 => grp_cnn_fu_692_output_0_6_address1,
        output_0_6_ce1 => grp_cnn_fu_692_output_0_6_ce1,
        output_0_6_we1 => grp_cnn_fu_692_output_0_6_we1,
        output_0_6_d1 => grp_cnn_fu_692_output_0_6_d1,
        output_0_6_q1 => output_6_q1,
        output_0_7_address0 => grp_cnn_fu_692_output_0_7_address0,
        output_0_7_ce0 => grp_cnn_fu_692_output_0_7_ce0,
        output_0_7_we0 => grp_cnn_fu_692_output_0_7_we0,
        output_0_7_d0 => grp_cnn_fu_692_output_0_7_d0,
        output_0_7_q0 => output_7_q0,
        output_0_7_address1 => grp_cnn_fu_692_output_0_7_address1,
        output_0_7_ce1 => grp_cnn_fu_692_output_0_7_ce1,
        output_0_7_we1 => grp_cnn_fu_692_output_0_7_we1,
        output_0_7_d1 => grp_cnn_fu_692_output_0_7_d1,
        output_0_7_q1 => output_7_q1,
        output_1_0_address0 => grp_cnn_fu_692_output_1_0_address0,
        output_1_0_ce0 => grp_cnn_fu_692_output_1_0_ce0,
        output_1_0_we0 => grp_cnn_fu_692_output_1_0_we0,
        output_1_0_d0 => grp_cnn_fu_692_output_1_0_d0,
        output_1_0_q0 => output_8_q0,
        output_1_0_address1 => grp_cnn_fu_692_output_1_0_address1,
        output_1_0_ce1 => grp_cnn_fu_692_output_1_0_ce1,
        output_1_0_we1 => grp_cnn_fu_692_output_1_0_we1,
        output_1_0_d1 => grp_cnn_fu_692_output_1_0_d1,
        output_1_0_q1 => output_8_q1,
        output_1_1_address0 => grp_cnn_fu_692_output_1_1_address0,
        output_1_1_ce0 => grp_cnn_fu_692_output_1_1_ce0,
        output_1_1_we0 => grp_cnn_fu_692_output_1_1_we0,
        output_1_1_d0 => grp_cnn_fu_692_output_1_1_d0,
        output_1_1_q0 => output_9_q0,
        output_1_1_address1 => grp_cnn_fu_692_output_1_1_address1,
        output_1_1_ce1 => grp_cnn_fu_692_output_1_1_ce1,
        output_1_1_we1 => grp_cnn_fu_692_output_1_1_we1,
        output_1_1_d1 => grp_cnn_fu_692_output_1_1_d1,
        output_1_1_q1 => output_9_q1,
        output_1_2_address0 => grp_cnn_fu_692_output_1_2_address0,
        output_1_2_ce0 => grp_cnn_fu_692_output_1_2_ce0,
        output_1_2_we0 => grp_cnn_fu_692_output_1_2_we0,
        output_1_2_d0 => grp_cnn_fu_692_output_1_2_d0,
        output_1_2_q0 => output_10_q0,
        output_1_2_address1 => grp_cnn_fu_692_output_1_2_address1,
        output_1_2_ce1 => grp_cnn_fu_692_output_1_2_ce1,
        output_1_2_we1 => grp_cnn_fu_692_output_1_2_we1,
        output_1_2_d1 => grp_cnn_fu_692_output_1_2_d1,
        output_1_2_q1 => output_10_q1,
        output_1_3_address0 => grp_cnn_fu_692_output_1_3_address0,
        output_1_3_ce0 => grp_cnn_fu_692_output_1_3_ce0,
        output_1_3_we0 => grp_cnn_fu_692_output_1_3_we0,
        output_1_3_d0 => grp_cnn_fu_692_output_1_3_d0,
        output_1_3_q0 => output_11_q0,
        output_1_3_address1 => grp_cnn_fu_692_output_1_3_address1,
        output_1_3_ce1 => grp_cnn_fu_692_output_1_3_ce1,
        output_1_3_we1 => grp_cnn_fu_692_output_1_3_we1,
        output_1_3_d1 => grp_cnn_fu_692_output_1_3_d1,
        output_1_3_q1 => output_11_q1,
        output_1_4_address0 => grp_cnn_fu_692_output_1_4_address0,
        output_1_4_ce0 => grp_cnn_fu_692_output_1_4_ce0,
        output_1_4_we0 => grp_cnn_fu_692_output_1_4_we0,
        output_1_4_d0 => grp_cnn_fu_692_output_1_4_d0,
        output_1_4_q0 => output_12_q0,
        output_1_4_address1 => grp_cnn_fu_692_output_1_4_address1,
        output_1_4_ce1 => grp_cnn_fu_692_output_1_4_ce1,
        output_1_4_we1 => grp_cnn_fu_692_output_1_4_we1,
        output_1_4_d1 => grp_cnn_fu_692_output_1_4_d1,
        output_1_4_q1 => output_12_q1,
        output_1_5_address0 => grp_cnn_fu_692_output_1_5_address0,
        output_1_5_ce0 => grp_cnn_fu_692_output_1_5_ce0,
        output_1_5_we0 => grp_cnn_fu_692_output_1_5_we0,
        output_1_5_d0 => grp_cnn_fu_692_output_1_5_d0,
        output_1_5_q0 => output_13_q0,
        output_1_5_address1 => grp_cnn_fu_692_output_1_5_address1,
        output_1_5_ce1 => grp_cnn_fu_692_output_1_5_ce1,
        output_1_5_we1 => grp_cnn_fu_692_output_1_5_we1,
        output_1_5_d1 => grp_cnn_fu_692_output_1_5_d1,
        output_1_5_q1 => output_13_q1,
        output_1_6_address0 => grp_cnn_fu_692_output_1_6_address0,
        output_1_6_ce0 => grp_cnn_fu_692_output_1_6_ce0,
        output_1_6_we0 => grp_cnn_fu_692_output_1_6_we0,
        output_1_6_d0 => grp_cnn_fu_692_output_1_6_d0,
        output_1_6_q0 => output_14_q0,
        output_1_6_address1 => grp_cnn_fu_692_output_1_6_address1,
        output_1_6_ce1 => grp_cnn_fu_692_output_1_6_ce1,
        output_1_6_we1 => grp_cnn_fu_692_output_1_6_we1,
        output_1_6_d1 => grp_cnn_fu_692_output_1_6_d1,
        output_1_6_q1 => output_14_q1,
        output_1_7_address0 => grp_cnn_fu_692_output_1_7_address0,
        output_1_7_ce0 => grp_cnn_fu_692_output_1_7_ce0,
        output_1_7_we0 => grp_cnn_fu_692_output_1_7_we0,
        output_1_7_d0 => grp_cnn_fu_692_output_1_7_d0,
        output_1_7_q0 => output_15_q0,
        output_1_7_address1 => grp_cnn_fu_692_output_1_7_address1,
        output_1_7_ce1 => grp_cnn_fu_692_output_1_7_ce1,
        output_1_7_we1 => grp_cnn_fu_692_output_1_7_we1,
        output_1_7_d1 => grp_cnn_fu_692_output_1_7_d1,
        output_1_7_q1 => output_15_q1,
        output_2_0_address0 => grp_cnn_fu_692_output_2_0_address0,
        output_2_0_ce0 => grp_cnn_fu_692_output_2_0_ce0,
        output_2_0_we0 => grp_cnn_fu_692_output_2_0_we0,
        output_2_0_d0 => grp_cnn_fu_692_output_2_0_d0,
        output_2_0_q0 => output_16_q0,
        output_2_0_address1 => grp_cnn_fu_692_output_2_0_address1,
        output_2_0_ce1 => grp_cnn_fu_692_output_2_0_ce1,
        output_2_0_we1 => grp_cnn_fu_692_output_2_0_we1,
        output_2_0_d1 => grp_cnn_fu_692_output_2_0_d1,
        output_2_0_q1 => output_16_q1,
        output_2_1_address0 => grp_cnn_fu_692_output_2_1_address0,
        output_2_1_ce0 => grp_cnn_fu_692_output_2_1_ce0,
        output_2_1_we0 => grp_cnn_fu_692_output_2_1_we0,
        output_2_1_d0 => grp_cnn_fu_692_output_2_1_d0,
        output_2_1_q0 => output_17_q0,
        output_2_1_address1 => grp_cnn_fu_692_output_2_1_address1,
        output_2_1_ce1 => grp_cnn_fu_692_output_2_1_ce1,
        output_2_1_we1 => grp_cnn_fu_692_output_2_1_we1,
        output_2_1_d1 => grp_cnn_fu_692_output_2_1_d1,
        output_2_1_q1 => output_17_q1,
        output_2_2_address0 => grp_cnn_fu_692_output_2_2_address0,
        output_2_2_ce0 => grp_cnn_fu_692_output_2_2_ce0,
        output_2_2_we0 => grp_cnn_fu_692_output_2_2_we0,
        output_2_2_d0 => grp_cnn_fu_692_output_2_2_d0,
        output_2_2_q0 => output_18_q0,
        output_2_2_address1 => grp_cnn_fu_692_output_2_2_address1,
        output_2_2_ce1 => grp_cnn_fu_692_output_2_2_ce1,
        output_2_2_we1 => grp_cnn_fu_692_output_2_2_we1,
        output_2_2_d1 => grp_cnn_fu_692_output_2_2_d1,
        output_2_2_q1 => output_18_q1,
        output_2_3_address0 => grp_cnn_fu_692_output_2_3_address0,
        output_2_3_ce0 => grp_cnn_fu_692_output_2_3_ce0,
        output_2_3_we0 => grp_cnn_fu_692_output_2_3_we0,
        output_2_3_d0 => grp_cnn_fu_692_output_2_3_d0,
        output_2_3_q0 => output_19_q0,
        output_2_3_address1 => grp_cnn_fu_692_output_2_3_address1,
        output_2_3_ce1 => grp_cnn_fu_692_output_2_3_ce1,
        output_2_3_we1 => grp_cnn_fu_692_output_2_3_we1,
        output_2_3_d1 => grp_cnn_fu_692_output_2_3_d1,
        output_2_3_q1 => output_19_q1,
        output_2_4_address0 => grp_cnn_fu_692_output_2_4_address0,
        output_2_4_ce0 => grp_cnn_fu_692_output_2_4_ce0,
        output_2_4_we0 => grp_cnn_fu_692_output_2_4_we0,
        output_2_4_d0 => grp_cnn_fu_692_output_2_4_d0,
        output_2_4_q0 => output_20_q0,
        output_2_4_address1 => grp_cnn_fu_692_output_2_4_address1,
        output_2_4_ce1 => grp_cnn_fu_692_output_2_4_ce1,
        output_2_4_we1 => grp_cnn_fu_692_output_2_4_we1,
        output_2_4_d1 => grp_cnn_fu_692_output_2_4_d1,
        output_2_4_q1 => output_20_q1,
        output_2_5_address0 => grp_cnn_fu_692_output_2_5_address0,
        output_2_5_ce0 => grp_cnn_fu_692_output_2_5_ce0,
        output_2_5_we0 => grp_cnn_fu_692_output_2_5_we0,
        output_2_5_d0 => grp_cnn_fu_692_output_2_5_d0,
        output_2_5_q0 => output_21_q0,
        output_2_5_address1 => grp_cnn_fu_692_output_2_5_address1,
        output_2_5_ce1 => grp_cnn_fu_692_output_2_5_ce1,
        output_2_5_we1 => grp_cnn_fu_692_output_2_5_we1,
        output_2_5_d1 => grp_cnn_fu_692_output_2_5_d1,
        output_2_5_q1 => output_21_q1,
        output_2_6_address0 => grp_cnn_fu_692_output_2_6_address0,
        output_2_6_ce0 => grp_cnn_fu_692_output_2_6_ce0,
        output_2_6_we0 => grp_cnn_fu_692_output_2_6_we0,
        output_2_6_d0 => grp_cnn_fu_692_output_2_6_d0,
        output_2_6_q0 => output_22_q0,
        output_2_6_address1 => grp_cnn_fu_692_output_2_6_address1,
        output_2_6_ce1 => grp_cnn_fu_692_output_2_6_ce1,
        output_2_6_we1 => grp_cnn_fu_692_output_2_6_we1,
        output_2_6_d1 => grp_cnn_fu_692_output_2_6_d1,
        output_2_6_q1 => output_22_q1,
        output_2_7_address0 => grp_cnn_fu_692_output_2_7_address0,
        output_2_7_ce0 => grp_cnn_fu_692_output_2_7_ce0,
        output_2_7_we0 => grp_cnn_fu_692_output_2_7_we0,
        output_2_7_d0 => grp_cnn_fu_692_output_2_7_d0,
        output_2_7_q0 => output_23_q0,
        output_2_7_address1 => grp_cnn_fu_692_output_2_7_address1,
        output_2_7_ce1 => grp_cnn_fu_692_output_2_7_ce1,
        output_2_7_we1 => grp_cnn_fu_692_output_2_7_we1,
        output_2_7_d1 => grp_cnn_fu_692_output_2_7_d1,
        output_2_7_q1 => output_23_q1,
        output_3_0_address0 => grp_cnn_fu_692_output_3_0_address0,
        output_3_0_ce0 => grp_cnn_fu_692_output_3_0_ce0,
        output_3_0_we0 => grp_cnn_fu_692_output_3_0_we0,
        output_3_0_d0 => grp_cnn_fu_692_output_3_0_d0,
        output_3_0_q0 => output_24_q0,
        output_3_0_address1 => grp_cnn_fu_692_output_3_0_address1,
        output_3_0_ce1 => grp_cnn_fu_692_output_3_0_ce1,
        output_3_0_we1 => grp_cnn_fu_692_output_3_0_we1,
        output_3_0_d1 => grp_cnn_fu_692_output_3_0_d1,
        output_3_0_q1 => output_24_q1,
        output_3_1_address0 => grp_cnn_fu_692_output_3_1_address0,
        output_3_1_ce0 => grp_cnn_fu_692_output_3_1_ce0,
        output_3_1_we0 => grp_cnn_fu_692_output_3_1_we0,
        output_3_1_d0 => grp_cnn_fu_692_output_3_1_d0,
        output_3_1_q0 => output_25_q0,
        output_3_1_address1 => grp_cnn_fu_692_output_3_1_address1,
        output_3_1_ce1 => grp_cnn_fu_692_output_3_1_ce1,
        output_3_1_we1 => grp_cnn_fu_692_output_3_1_we1,
        output_3_1_d1 => grp_cnn_fu_692_output_3_1_d1,
        output_3_1_q1 => output_25_q1,
        output_3_2_address0 => grp_cnn_fu_692_output_3_2_address0,
        output_3_2_ce0 => grp_cnn_fu_692_output_3_2_ce0,
        output_3_2_we0 => grp_cnn_fu_692_output_3_2_we0,
        output_3_2_d0 => grp_cnn_fu_692_output_3_2_d0,
        output_3_2_q0 => output_26_q0,
        output_3_2_address1 => grp_cnn_fu_692_output_3_2_address1,
        output_3_2_ce1 => grp_cnn_fu_692_output_3_2_ce1,
        output_3_2_we1 => grp_cnn_fu_692_output_3_2_we1,
        output_3_2_d1 => grp_cnn_fu_692_output_3_2_d1,
        output_3_2_q1 => output_26_q1,
        output_3_3_address0 => grp_cnn_fu_692_output_3_3_address0,
        output_3_3_ce0 => grp_cnn_fu_692_output_3_3_ce0,
        output_3_3_we0 => grp_cnn_fu_692_output_3_3_we0,
        output_3_3_d0 => grp_cnn_fu_692_output_3_3_d0,
        output_3_3_q0 => output_27_q0,
        output_3_3_address1 => grp_cnn_fu_692_output_3_3_address1,
        output_3_3_ce1 => grp_cnn_fu_692_output_3_3_ce1,
        output_3_3_we1 => grp_cnn_fu_692_output_3_3_we1,
        output_3_3_d1 => grp_cnn_fu_692_output_3_3_d1,
        output_3_3_q1 => output_27_q1,
        output_3_4_address0 => grp_cnn_fu_692_output_3_4_address0,
        output_3_4_ce0 => grp_cnn_fu_692_output_3_4_ce0,
        output_3_4_we0 => grp_cnn_fu_692_output_3_4_we0,
        output_3_4_d0 => grp_cnn_fu_692_output_3_4_d0,
        output_3_4_q0 => output_28_q0,
        output_3_4_address1 => grp_cnn_fu_692_output_3_4_address1,
        output_3_4_ce1 => grp_cnn_fu_692_output_3_4_ce1,
        output_3_4_we1 => grp_cnn_fu_692_output_3_4_we1,
        output_3_4_d1 => grp_cnn_fu_692_output_3_4_d1,
        output_3_4_q1 => output_28_q1,
        output_3_5_address0 => grp_cnn_fu_692_output_3_5_address0,
        output_3_5_ce0 => grp_cnn_fu_692_output_3_5_ce0,
        output_3_5_we0 => grp_cnn_fu_692_output_3_5_we0,
        output_3_5_d0 => grp_cnn_fu_692_output_3_5_d0,
        output_3_5_q0 => output_29_q0,
        output_3_5_address1 => grp_cnn_fu_692_output_3_5_address1,
        output_3_5_ce1 => grp_cnn_fu_692_output_3_5_ce1,
        output_3_5_we1 => grp_cnn_fu_692_output_3_5_we1,
        output_3_5_d1 => grp_cnn_fu_692_output_3_5_d1,
        output_3_5_q1 => output_29_q1,
        output_3_6_address0 => grp_cnn_fu_692_output_3_6_address0,
        output_3_6_ce0 => grp_cnn_fu_692_output_3_6_ce0,
        output_3_6_we0 => grp_cnn_fu_692_output_3_6_we0,
        output_3_6_d0 => grp_cnn_fu_692_output_3_6_d0,
        output_3_6_q0 => output_30_q0,
        output_3_6_address1 => grp_cnn_fu_692_output_3_6_address1,
        output_3_6_ce1 => grp_cnn_fu_692_output_3_6_ce1,
        output_3_6_we1 => grp_cnn_fu_692_output_3_6_we1,
        output_3_6_d1 => grp_cnn_fu_692_output_3_6_d1,
        output_3_6_q1 => output_30_q1,
        output_3_7_address0 => grp_cnn_fu_692_output_3_7_address0,
        output_3_7_ce0 => grp_cnn_fu_692_output_3_7_ce0,
        output_3_7_we0 => grp_cnn_fu_692_output_3_7_we0,
        output_3_7_d0 => grp_cnn_fu_692_output_3_7_d0,
        output_3_7_q0 => output_31_q0,
        output_3_7_address1 => grp_cnn_fu_692_output_3_7_address1,
        output_3_7_ce1 => grp_cnn_fu_692_output_3_7_ce1,
        output_3_7_we1 => grp_cnn_fu_692_output_3_7_we1,
        output_3_7_d1 => grp_cnn_fu_692_output_3_7_d1,
        output_3_7_q1 => output_31_q1,
        weight_0_0_address0 => grp_cnn_fu_692_weight_0_0_address0,
        weight_0_0_ce0 => grp_cnn_fu_692_weight_0_0_ce0,
        weight_0_0_we0 => grp_cnn_fu_692_weight_0_0_we0,
        weight_0_0_d0 => grp_cnn_fu_692_weight_0_0_d0,
        weight_0_0_q0 => weight_q0,
        weight_0_1_address0 => grp_cnn_fu_692_weight_0_1_address0,
        weight_0_1_ce0 => grp_cnn_fu_692_weight_0_1_ce0,
        weight_0_1_we0 => grp_cnn_fu_692_weight_0_1_we0,
        weight_0_1_d0 => grp_cnn_fu_692_weight_0_1_d0,
        weight_0_1_q0 => weight_1_q0,
        weight_0_2_address0 => grp_cnn_fu_692_weight_0_2_address0,
        weight_0_2_ce0 => grp_cnn_fu_692_weight_0_2_ce0,
        weight_0_2_we0 => grp_cnn_fu_692_weight_0_2_we0,
        weight_0_2_d0 => grp_cnn_fu_692_weight_0_2_d0,
        weight_0_2_q0 => weight_2_q0,
        weight_0_3_address0 => grp_cnn_fu_692_weight_0_3_address0,
        weight_0_3_ce0 => grp_cnn_fu_692_weight_0_3_ce0,
        weight_0_3_we0 => grp_cnn_fu_692_weight_0_3_we0,
        weight_0_3_d0 => grp_cnn_fu_692_weight_0_3_d0,
        weight_0_3_q0 => weight_3_q0,
        weight_0_4_address0 => grp_cnn_fu_692_weight_0_4_address0,
        weight_0_4_ce0 => grp_cnn_fu_692_weight_0_4_ce0,
        weight_0_4_we0 => grp_cnn_fu_692_weight_0_4_we0,
        weight_0_4_d0 => grp_cnn_fu_692_weight_0_4_d0,
        weight_0_4_q0 => weight_4_q0,
        weight_1_0_address0 => grp_cnn_fu_692_weight_1_0_address0,
        weight_1_0_ce0 => grp_cnn_fu_692_weight_1_0_ce0,
        weight_1_0_we0 => grp_cnn_fu_692_weight_1_0_we0,
        weight_1_0_d0 => grp_cnn_fu_692_weight_1_0_d0,
        weight_1_0_q0 => weight_5_q0,
        weight_1_1_address0 => grp_cnn_fu_692_weight_1_1_address0,
        weight_1_1_ce0 => grp_cnn_fu_692_weight_1_1_ce0,
        weight_1_1_we0 => grp_cnn_fu_692_weight_1_1_we0,
        weight_1_1_d0 => grp_cnn_fu_692_weight_1_1_d0,
        weight_1_1_q0 => weight_6_q0,
        weight_1_2_address0 => grp_cnn_fu_692_weight_1_2_address0,
        weight_1_2_ce0 => grp_cnn_fu_692_weight_1_2_ce0,
        weight_1_2_we0 => grp_cnn_fu_692_weight_1_2_we0,
        weight_1_2_d0 => grp_cnn_fu_692_weight_1_2_d0,
        weight_1_2_q0 => weight_7_q0,
        weight_1_3_address0 => grp_cnn_fu_692_weight_1_3_address0,
        weight_1_3_ce0 => grp_cnn_fu_692_weight_1_3_ce0,
        weight_1_3_we0 => grp_cnn_fu_692_weight_1_3_we0,
        weight_1_3_d0 => grp_cnn_fu_692_weight_1_3_d0,
        weight_1_3_q0 => weight_8_q0,
        weight_1_4_address0 => grp_cnn_fu_692_weight_1_4_address0,
        weight_1_4_ce0 => grp_cnn_fu_692_weight_1_4_ce0,
        weight_1_4_we0 => grp_cnn_fu_692_weight_1_4_we0,
        weight_1_4_d0 => grp_cnn_fu_692_weight_1_4_d0,
        weight_1_4_q0 => weight_9_q0,
        weight_2_0_address0 => grp_cnn_fu_692_weight_2_0_address0,
        weight_2_0_ce0 => grp_cnn_fu_692_weight_2_0_ce0,
        weight_2_0_we0 => grp_cnn_fu_692_weight_2_0_we0,
        weight_2_0_d0 => grp_cnn_fu_692_weight_2_0_d0,
        weight_2_0_q0 => weight_10_q0,
        weight_2_1_address0 => grp_cnn_fu_692_weight_2_1_address0,
        weight_2_1_ce0 => grp_cnn_fu_692_weight_2_1_ce0,
        weight_2_1_we0 => grp_cnn_fu_692_weight_2_1_we0,
        weight_2_1_d0 => grp_cnn_fu_692_weight_2_1_d0,
        weight_2_1_q0 => weight_11_q0,
        weight_2_2_address0 => grp_cnn_fu_692_weight_2_2_address0,
        weight_2_2_ce0 => grp_cnn_fu_692_weight_2_2_ce0,
        weight_2_2_we0 => grp_cnn_fu_692_weight_2_2_we0,
        weight_2_2_d0 => grp_cnn_fu_692_weight_2_2_d0,
        weight_2_2_q0 => weight_12_q0,
        weight_2_3_address0 => grp_cnn_fu_692_weight_2_3_address0,
        weight_2_3_ce0 => grp_cnn_fu_692_weight_2_3_ce0,
        weight_2_3_we0 => grp_cnn_fu_692_weight_2_3_we0,
        weight_2_3_d0 => grp_cnn_fu_692_weight_2_3_d0,
        weight_2_3_q0 => weight_13_q0,
        weight_2_4_address0 => grp_cnn_fu_692_weight_2_4_address0,
        weight_2_4_ce0 => grp_cnn_fu_692_weight_2_4_ce0,
        weight_2_4_we0 => grp_cnn_fu_692_weight_2_4_we0,
        weight_2_4_d0 => grp_cnn_fu_692_weight_2_4_d0,
        weight_2_4_q0 => weight_14_q0,
        weight_3_0_address0 => grp_cnn_fu_692_weight_3_0_address0,
        weight_3_0_ce0 => grp_cnn_fu_692_weight_3_0_ce0,
        weight_3_0_we0 => grp_cnn_fu_692_weight_3_0_we0,
        weight_3_0_d0 => grp_cnn_fu_692_weight_3_0_d0,
        weight_3_0_q0 => weight_15_q0,
        weight_3_1_address0 => grp_cnn_fu_692_weight_3_1_address0,
        weight_3_1_ce0 => grp_cnn_fu_692_weight_3_1_ce0,
        weight_3_1_we0 => grp_cnn_fu_692_weight_3_1_we0,
        weight_3_1_d0 => grp_cnn_fu_692_weight_3_1_d0,
        weight_3_1_q0 => weight_16_q0,
        weight_3_2_address0 => grp_cnn_fu_692_weight_3_2_address0,
        weight_3_2_ce0 => grp_cnn_fu_692_weight_3_2_ce0,
        weight_3_2_we0 => grp_cnn_fu_692_weight_3_2_we0,
        weight_3_2_d0 => grp_cnn_fu_692_weight_3_2_d0,
        weight_3_2_q0 => weight_17_q0,
        weight_3_3_address0 => grp_cnn_fu_692_weight_3_3_address0,
        weight_3_3_ce0 => grp_cnn_fu_692_weight_3_3_ce0,
        weight_3_3_we0 => grp_cnn_fu_692_weight_3_3_we0,
        weight_3_3_d0 => grp_cnn_fu_692_weight_3_3_d0,
        weight_3_3_q0 => weight_18_q0,
        weight_3_4_address0 => grp_cnn_fu_692_weight_3_4_address0,
        weight_3_4_ce0 => grp_cnn_fu_692_weight_3_4_ce0,
        weight_3_4_we0 => grp_cnn_fu_692_weight_3_4_we0,
        weight_3_4_d0 => grp_cnn_fu_692_weight_3_4_d0,
        weight_3_4_q0 => weight_19_q0,
        weight_4_0_address0 => grp_cnn_fu_692_weight_4_0_address0,
        weight_4_0_ce0 => grp_cnn_fu_692_weight_4_0_ce0,
        weight_4_0_we0 => grp_cnn_fu_692_weight_4_0_we0,
        weight_4_0_d0 => grp_cnn_fu_692_weight_4_0_d0,
        weight_4_0_q0 => weight_20_q0,
        weight_4_1_address0 => grp_cnn_fu_692_weight_4_1_address0,
        weight_4_1_ce0 => grp_cnn_fu_692_weight_4_1_ce0,
        weight_4_1_we0 => grp_cnn_fu_692_weight_4_1_we0,
        weight_4_1_d0 => grp_cnn_fu_692_weight_4_1_d0,
        weight_4_1_q0 => weight_21_q0,
        weight_4_2_address0 => grp_cnn_fu_692_weight_4_2_address0,
        weight_4_2_ce0 => grp_cnn_fu_692_weight_4_2_ce0,
        weight_4_2_we0 => grp_cnn_fu_692_weight_4_2_we0,
        weight_4_2_d0 => grp_cnn_fu_692_weight_4_2_d0,
        weight_4_2_q0 => weight_22_q0,
        weight_4_3_address0 => grp_cnn_fu_692_weight_4_3_address0,
        weight_4_3_ce0 => grp_cnn_fu_692_weight_4_3_ce0,
        weight_4_3_we0 => grp_cnn_fu_692_weight_4_3_we0,
        weight_4_3_d0 => grp_cnn_fu_692_weight_4_3_d0,
        weight_4_3_q0 => weight_23_q0,
        weight_4_4_address0 => grp_cnn_fu_692_weight_4_4_address0,
        weight_4_4_ce0 => grp_cnn_fu_692_weight_4_4_ce0,
        weight_4_4_we0 => grp_cnn_fu_692_weight_4_4_we0,
        weight_4_4_d0 => grp_cnn_fu_692_weight_4_4_d0,
        weight_4_4_q0 => weight_24_q0,
        m_axi_kernel_input_AWVALID => grp_cnn_fu_692_m_axi_kernel_input_AWVALID,
        m_axi_kernel_input_AWREADY => ap_const_logic_0,
        m_axi_kernel_input_AWADDR => grp_cnn_fu_692_m_axi_kernel_input_AWADDR,
        m_axi_kernel_input_AWID => grp_cnn_fu_692_m_axi_kernel_input_AWID,
        m_axi_kernel_input_AWLEN => grp_cnn_fu_692_m_axi_kernel_input_AWLEN,
        m_axi_kernel_input_AWSIZE => grp_cnn_fu_692_m_axi_kernel_input_AWSIZE,
        m_axi_kernel_input_AWBURST => grp_cnn_fu_692_m_axi_kernel_input_AWBURST,
        m_axi_kernel_input_AWLOCK => grp_cnn_fu_692_m_axi_kernel_input_AWLOCK,
        m_axi_kernel_input_AWCACHE => grp_cnn_fu_692_m_axi_kernel_input_AWCACHE,
        m_axi_kernel_input_AWPROT => grp_cnn_fu_692_m_axi_kernel_input_AWPROT,
        m_axi_kernel_input_AWQOS => grp_cnn_fu_692_m_axi_kernel_input_AWQOS,
        m_axi_kernel_input_AWREGION => grp_cnn_fu_692_m_axi_kernel_input_AWREGION,
        m_axi_kernel_input_AWUSER => grp_cnn_fu_692_m_axi_kernel_input_AWUSER,
        m_axi_kernel_input_WVALID => grp_cnn_fu_692_m_axi_kernel_input_WVALID,
        m_axi_kernel_input_WREADY => ap_const_logic_0,
        m_axi_kernel_input_WDATA => grp_cnn_fu_692_m_axi_kernel_input_WDATA,
        m_axi_kernel_input_WSTRB => grp_cnn_fu_692_m_axi_kernel_input_WSTRB,
        m_axi_kernel_input_WLAST => grp_cnn_fu_692_m_axi_kernel_input_WLAST,
        m_axi_kernel_input_WID => grp_cnn_fu_692_m_axi_kernel_input_WID,
        m_axi_kernel_input_WUSER => grp_cnn_fu_692_m_axi_kernel_input_WUSER,
        m_axi_kernel_input_ARVALID => grp_cnn_fu_692_m_axi_kernel_input_ARVALID,
        m_axi_kernel_input_ARREADY => kernel_input_ARREADY,
        m_axi_kernel_input_ARADDR => grp_cnn_fu_692_m_axi_kernel_input_ARADDR,
        m_axi_kernel_input_ARID => grp_cnn_fu_692_m_axi_kernel_input_ARID,
        m_axi_kernel_input_ARLEN => grp_cnn_fu_692_m_axi_kernel_input_ARLEN,
        m_axi_kernel_input_ARSIZE => grp_cnn_fu_692_m_axi_kernel_input_ARSIZE,
        m_axi_kernel_input_ARBURST => grp_cnn_fu_692_m_axi_kernel_input_ARBURST,
        m_axi_kernel_input_ARLOCK => grp_cnn_fu_692_m_axi_kernel_input_ARLOCK,
        m_axi_kernel_input_ARCACHE => grp_cnn_fu_692_m_axi_kernel_input_ARCACHE,
        m_axi_kernel_input_ARPROT => grp_cnn_fu_692_m_axi_kernel_input_ARPROT,
        m_axi_kernel_input_ARQOS => grp_cnn_fu_692_m_axi_kernel_input_ARQOS,
        m_axi_kernel_input_ARREGION => grp_cnn_fu_692_m_axi_kernel_input_ARREGION,
        m_axi_kernel_input_ARUSER => grp_cnn_fu_692_m_axi_kernel_input_ARUSER,
        m_axi_kernel_input_RVALID => kernel_input_RVALID,
        m_axi_kernel_input_RREADY => grp_cnn_fu_692_m_axi_kernel_input_RREADY,
        m_axi_kernel_input_RDATA => kernel_input_RDATA,
        m_axi_kernel_input_RLAST => ap_const_logic_0,
        m_axi_kernel_input_RID => ap_const_lv1_0,
        m_axi_kernel_input_RFIFONUM => kernel_input_RFIFONUM,
        m_axi_kernel_input_RUSER => ap_const_lv1_0,
        m_axi_kernel_input_RRESP => ap_const_lv2_0,
        m_axi_kernel_input_BVALID => ap_const_logic_0,
        m_axi_kernel_input_BREADY => grp_cnn_fu_692_m_axi_kernel_input_BREADY,
        m_axi_kernel_input_BRESP => ap_const_lv2_0,
        m_axi_kernel_input_BID => ap_const_lv1_0,
        m_axi_kernel_input_BUSER => ap_const_lv1_0,
        vinput => vinput_read_reg_1024,
        m_axi_kernel_weight_AWVALID => grp_cnn_fu_692_m_axi_kernel_weight_AWVALID,
        m_axi_kernel_weight_AWREADY => ap_const_logic_0,
        m_axi_kernel_weight_AWADDR => grp_cnn_fu_692_m_axi_kernel_weight_AWADDR,
        m_axi_kernel_weight_AWID => grp_cnn_fu_692_m_axi_kernel_weight_AWID,
        m_axi_kernel_weight_AWLEN => grp_cnn_fu_692_m_axi_kernel_weight_AWLEN,
        m_axi_kernel_weight_AWSIZE => grp_cnn_fu_692_m_axi_kernel_weight_AWSIZE,
        m_axi_kernel_weight_AWBURST => grp_cnn_fu_692_m_axi_kernel_weight_AWBURST,
        m_axi_kernel_weight_AWLOCK => grp_cnn_fu_692_m_axi_kernel_weight_AWLOCK,
        m_axi_kernel_weight_AWCACHE => grp_cnn_fu_692_m_axi_kernel_weight_AWCACHE,
        m_axi_kernel_weight_AWPROT => grp_cnn_fu_692_m_axi_kernel_weight_AWPROT,
        m_axi_kernel_weight_AWQOS => grp_cnn_fu_692_m_axi_kernel_weight_AWQOS,
        m_axi_kernel_weight_AWREGION => grp_cnn_fu_692_m_axi_kernel_weight_AWREGION,
        m_axi_kernel_weight_AWUSER => grp_cnn_fu_692_m_axi_kernel_weight_AWUSER,
        m_axi_kernel_weight_WVALID => grp_cnn_fu_692_m_axi_kernel_weight_WVALID,
        m_axi_kernel_weight_WREADY => ap_const_logic_0,
        m_axi_kernel_weight_WDATA => grp_cnn_fu_692_m_axi_kernel_weight_WDATA,
        m_axi_kernel_weight_WSTRB => grp_cnn_fu_692_m_axi_kernel_weight_WSTRB,
        m_axi_kernel_weight_WLAST => grp_cnn_fu_692_m_axi_kernel_weight_WLAST,
        m_axi_kernel_weight_WID => grp_cnn_fu_692_m_axi_kernel_weight_WID,
        m_axi_kernel_weight_WUSER => grp_cnn_fu_692_m_axi_kernel_weight_WUSER,
        m_axi_kernel_weight_ARVALID => grp_cnn_fu_692_m_axi_kernel_weight_ARVALID,
        m_axi_kernel_weight_ARREADY => kernel_weight_ARREADY,
        m_axi_kernel_weight_ARADDR => grp_cnn_fu_692_m_axi_kernel_weight_ARADDR,
        m_axi_kernel_weight_ARID => grp_cnn_fu_692_m_axi_kernel_weight_ARID,
        m_axi_kernel_weight_ARLEN => grp_cnn_fu_692_m_axi_kernel_weight_ARLEN,
        m_axi_kernel_weight_ARSIZE => grp_cnn_fu_692_m_axi_kernel_weight_ARSIZE,
        m_axi_kernel_weight_ARBURST => grp_cnn_fu_692_m_axi_kernel_weight_ARBURST,
        m_axi_kernel_weight_ARLOCK => grp_cnn_fu_692_m_axi_kernel_weight_ARLOCK,
        m_axi_kernel_weight_ARCACHE => grp_cnn_fu_692_m_axi_kernel_weight_ARCACHE,
        m_axi_kernel_weight_ARPROT => grp_cnn_fu_692_m_axi_kernel_weight_ARPROT,
        m_axi_kernel_weight_ARQOS => grp_cnn_fu_692_m_axi_kernel_weight_ARQOS,
        m_axi_kernel_weight_ARREGION => grp_cnn_fu_692_m_axi_kernel_weight_ARREGION,
        m_axi_kernel_weight_ARUSER => grp_cnn_fu_692_m_axi_kernel_weight_ARUSER,
        m_axi_kernel_weight_RVALID => kernel_weight_RVALID,
        m_axi_kernel_weight_RREADY => grp_cnn_fu_692_m_axi_kernel_weight_RREADY,
        m_axi_kernel_weight_RDATA => kernel_weight_RDATA,
        m_axi_kernel_weight_RLAST => ap_const_logic_0,
        m_axi_kernel_weight_RID => ap_const_lv1_0,
        m_axi_kernel_weight_RFIFONUM => kernel_weight_RFIFONUM,
        m_axi_kernel_weight_RUSER => ap_const_lv1_0,
        m_axi_kernel_weight_RRESP => ap_const_lv2_0,
        m_axi_kernel_weight_BVALID => ap_const_logic_0,
        m_axi_kernel_weight_BREADY => grp_cnn_fu_692_m_axi_kernel_weight_BREADY,
        m_axi_kernel_weight_BRESP => ap_const_lv2_0,
        m_axi_kernel_weight_BID => ap_const_lv1_0,
        m_axi_kernel_weight_BUSER => ap_const_lv1_0,
        vweight => vweight_read_reg_1019,
        m_axi_kernel_output_AWVALID => grp_cnn_fu_692_m_axi_kernel_output_AWVALID,
        m_axi_kernel_output_AWREADY => kernel_output_AWREADY,
        m_axi_kernel_output_AWADDR => grp_cnn_fu_692_m_axi_kernel_output_AWADDR,
        m_axi_kernel_output_AWID => grp_cnn_fu_692_m_axi_kernel_output_AWID,
        m_axi_kernel_output_AWLEN => grp_cnn_fu_692_m_axi_kernel_output_AWLEN,
        m_axi_kernel_output_AWSIZE => grp_cnn_fu_692_m_axi_kernel_output_AWSIZE,
        m_axi_kernel_output_AWBURST => grp_cnn_fu_692_m_axi_kernel_output_AWBURST,
        m_axi_kernel_output_AWLOCK => grp_cnn_fu_692_m_axi_kernel_output_AWLOCK,
        m_axi_kernel_output_AWCACHE => grp_cnn_fu_692_m_axi_kernel_output_AWCACHE,
        m_axi_kernel_output_AWPROT => grp_cnn_fu_692_m_axi_kernel_output_AWPROT,
        m_axi_kernel_output_AWQOS => grp_cnn_fu_692_m_axi_kernel_output_AWQOS,
        m_axi_kernel_output_AWREGION => grp_cnn_fu_692_m_axi_kernel_output_AWREGION,
        m_axi_kernel_output_AWUSER => grp_cnn_fu_692_m_axi_kernel_output_AWUSER,
        m_axi_kernel_output_WVALID => grp_cnn_fu_692_m_axi_kernel_output_WVALID,
        m_axi_kernel_output_WREADY => kernel_output_WREADY,
        m_axi_kernel_output_WDATA => grp_cnn_fu_692_m_axi_kernel_output_WDATA,
        m_axi_kernel_output_WSTRB => grp_cnn_fu_692_m_axi_kernel_output_WSTRB,
        m_axi_kernel_output_WLAST => grp_cnn_fu_692_m_axi_kernel_output_WLAST,
        m_axi_kernel_output_WID => grp_cnn_fu_692_m_axi_kernel_output_WID,
        m_axi_kernel_output_WUSER => grp_cnn_fu_692_m_axi_kernel_output_WUSER,
        m_axi_kernel_output_ARVALID => grp_cnn_fu_692_m_axi_kernel_output_ARVALID,
        m_axi_kernel_output_ARREADY => kernel_output_ARREADY,
        m_axi_kernel_output_ARADDR => grp_cnn_fu_692_m_axi_kernel_output_ARADDR,
        m_axi_kernel_output_ARID => grp_cnn_fu_692_m_axi_kernel_output_ARID,
        m_axi_kernel_output_ARLEN => grp_cnn_fu_692_m_axi_kernel_output_ARLEN,
        m_axi_kernel_output_ARSIZE => grp_cnn_fu_692_m_axi_kernel_output_ARSIZE,
        m_axi_kernel_output_ARBURST => grp_cnn_fu_692_m_axi_kernel_output_ARBURST,
        m_axi_kernel_output_ARLOCK => grp_cnn_fu_692_m_axi_kernel_output_ARLOCK,
        m_axi_kernel_output_ARCACHE => grp_cnn_fu_692_m_axi_kernel_output_ARCACHE,
        m_axi_kernel_output_ARPROT => grp_cnn_fu_692_m_axi_kernel_output_ARPROT,
        m_axi_kernel_output_ARQOS => grp_cnn_fu_692_m_axi_kernel_output_ARQOS,
        m_axi_kernel_output_ARREGION => grp_cnn_fu_692_m_axi_kernel_output_ARREGION,
        m_axi_kernel_output_ARUSER => grp_cnn_fu_692_m_axi_kernel_output_ARUSER,
        m_axi_kernel_output_RVALID => kernel_output_RVALID,
        m_axi_kernel_output_RREADY => grp_cnn_fu_692_m_axi_kernel_output_RREADY,
        m_axi_kernel_output_RDATA => kernel_output_RDATA,
        m_axi_kernel_output_RLAST => ap_const_logic_0,
        m_axi_kernel_output_RID => ap_const_lv1_0,
        m_axi_kernel_output_RFIFONUM => kernel_output_RFIFONUM,
        m_axi_kernel_output_RUSER => ap_const_lv1_0,
        m_axi_kernel_output_RRESP => ap_const_lv2_0,
        m_axi_kernel_output_BVALID => kernel_output_BVALID,
        m_axi_kernel_output_BREADY => grp_cnn_fu_692_m_axi_kernel_output_BREADY,
        m_axi_kernel_output_BRESP => ap_const_lv2_0,
        m_axi_kernel_output_BID => ap_const_lv1_0,
        m_axi_kernel_output_BUSER => ap_const_lv1_0,
        voutput => voutput_read_reg_1014);

    control_s_axi_U : component kernel_cnn_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        vinput => vinput,
        vweight => vweight,
        voutput => voutput,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    kernel_input_m_axi_U : component kernel_cnn_kernel_input_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 70,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_KERNEL_INPUT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_KERNEL_INPUT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_KERNEL_INPUT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_KERNEL_INPUT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_KERNEL_INPUT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_KERNEL_INPUT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_KERNEL_INPUT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_KERNEL_INPUT_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_KERNEL_INPUT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_KERNEL_INPUT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_KERNEL_INPUT_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 128,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_kernel_input_AWVALID,
        AWREADY => m_axi_kernel_input_AWREADY,
        AWADDR => m_axi_kernel_input_AWADDR,
        AWID => m_axi_kernel_input_AWID,
        AWLEN => m_axi_kernel_input_AWLEN,
        AWSIZE => m_axi_kernel_input_AWSIZE,
        AWBURST => m_axi_kernel_input_AWBURST,
        AWLOCK => m_axi_kernel_input_AWLOCK,
        AWCACHE => m_axi_kernel_input_AWCACHE,
        AWPROT => m_axi_kernel_input_AWPROT,
        AWQOS => m_axi_kernel_input_AWQOS,
        AWREGION => m_axi_kernel_input_AWREGION,
        AWUSER => m_axi_kernel_input_AWUSER,
        WVALID => m_axi_kernel_input_WVALID,
        WREADY => m_axi_kernel_input_WREADY,
        WDATA => m_axi_kernel_input_WDATA,
        WSTRB => m_axi_kernel_input_WSTRB,
        WLAST => m_axi_kernel_input_WLAST,
        WID => m_axi_kernel_input_WID,
        WUSER => m_axi_kernel_input_WUSER,
        ARVALID => m_axi_kernel_input_ARVALID,
        ARREADY => m_axi_kernel_input_ARREADY,
        ARADDR => m_axi_kernel_input_ARADDR,
        ARID => m_axi_kernel_input_ARID,
        ARLEN => m_axi_kernel_input_ARLEN,
        ARSIZE => m_axi_kernel_input_ARSIZE,
        ARBURST => m_axi_kernel_input_ARBURST,
        ARLOCK => m_axi_kernel_input_ARLOCK,
        ARCACHE => m_axi_kernel_input_ARCACHE,
        ARPROT => m_axi_kernel_input_ARPROT,
        ARQOS => m_axi_kernel_input_ARQOS,
        ARREGION => m_axi_kernel_input_ARREGION,
        ARUSER => m_axi_kernel_input_ARUSER,
        RVALID => m_axi_kernel_input_RVALID,
        RREADY => m_axi_kernel_input_RREADY,
        RDATA => m_axi_kernel_input_RDATA,
        RLAST => m_axi_kernel_input_RLAST,
        RID => m_axi_kernel_input_RID,
        RUSER => m_axi_kernel_input_RUSER,
        RRESP => m_axi_kernel_input_RRESP,
        BVALID => m_axi_kernel_input_BVALID,
        BREADY => m_axi_kernel_input_BREADY,
        BRESP => m_axi_kernel_input_BRESP,
        BID => m_axi_kernel_input_BID,
        BUSER => m_axi_kernel_input_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => kernel_input_ARVALID,
        I_ARREADY => kernel_input_ARREADY,
        I_ARADDR => grp_cnn_fu_692_m_axi_kernel_input_ARADDR,
        I_ARLEN => grp_cnn_fu_692_m_axi_kernel_input_ARLEN,
        I_RVALID => kernel_input_RVALID,
        I_RREADY => kernel_input_RREADY,
        I_RDATA => kernel_input_RDATA,
        I_RFIFONUM => kernel_input_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => kernel_input_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => kernel_input_WREADY,
        I_WDATA => ap_const_lv128_lc_1,
        I_WSTRB => ap_const_lv16_0,
        I_BVALID => kernel_input_BVALID,
        I_BREADY => ap_const_logic_0);

    kernel_output_m_axi_U : component kernel_cnn_kernel_output_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 70,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_KERNEL_OUTPUT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_KERNEL_OUTPUT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_KERNEL_OUTPUT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_KERNEL_OUTPUT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_KERNEL_OUTPUT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_KERNEL_OUTPUT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_KERNEL_OUTPUT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_KERNEL_OUTPUT_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_KERNEL_OUTPUT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_KERNEL_OUTPUT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_KERNEL_OUTPUT_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 512,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_kernel_output_AWVALID,
        AWREADY => m_axi_kernel_output_AWREADY,
        AWADDR => m_axi_kernel_output_AWADDR,
        AWID => m_axi_kernel_output_AWID,
        AWLEN => m_axi_kernel_output_AWLEN,
        AWSIZE => m_axi_kernel_output_AWSIZE,
        AWBURST => m_axi_kernel_output_AWBURST,
        AWLOCK => m_axi_kernel_output_AWLOCK,
        AWCACHE => m_axi_kernel_output_AWCACHE,
        AWPROT => m_axi_kernel_output_AWPROT,
        AWQOS => m_axi_kernel_output_AWQOS,
        AWREGION => m_axi_kernel_output_AWREGION,
        AWUSER => m_axi_kernel_output_AWUSER,
        WVALID => m_axi_kernel_output_WVALID,
        WREADY => m_axi_kernel_output_WREADY,
        WDATA => m_axi_kernel_output_WDATA,
        WSTRB => m_axi_kernel_output_WSTRB,
        WLAST => m_axi_kernel_output_WLAST,
        WID => m_axi_kernel_output_WID,
        WUSER => m_axi_kernel_output_WUSER,
        ARVALID => m_axi_kernel_output_ARVALID,
        ARREADY => m_axi_kernel_output_ARREADY,
        ARADDR => m_axi_kernel_output_ARADDR,
        ARID => m_axi_kernel_output_ARID,
        ARLEN => m_axi_kernel_output_ARLEN,
        ARSIZE => m_axi_kernel_output_ARSIZE,
        ARBURST => m_axi_kernel_output_ARBURST,
        ARLOCK => m_axi_kernel_output_ARLOCK,
        ARCACHE => m_axi_kernel_output_ARCACHE,
        ARPROT => m_axi_kernel_output_ARPROT,
        ARQOS => m_axi_kernel_output_ARQOS,
        ARREGION => m_axi_kernel_output_ARREGION,
        ARUSER => m_axi_kernel_output_ARUSER,
        RVALID => m_axi_kernel_output_RVALID,
        RREADY => m_axi_kernel_output_RREADY,
        RDATA => m_axi_kernel_output_RDATA,
        RLAST => m_axi_kernel_output_RLAST,
        RID => m_axi_kernel_output_RID,
        RUSER => m_axi_kernel_output_RUSER,
        RRESP => m_axi_kernel_output_RRESP,
        BVALID => m_axi_kernel_output_BVALID,
        BREADY => m_axi_kernel_output_BREADY,
        BRESP => m_axi_kernel_output_BRESP,
        BID => m_axi_kernel_output_BID,
        BUSER => m_axi_kernel_output_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => kernel_output_ARVALID,
        I_ARREADY => kernel_output_ARREADY,
        I_ARADDR => grp_cnn_fu_692_m_axi_kernel_output_ARADDR,
        I_ARLEN => grp_cnn_fu_692_m_axi_kernel_output_ARLEN,
        I_RVALID => kernel_output_RVALID,
        I_RREADY => kernel_output_RREADY,
        I_RDATA => kernel_output_RDATA,
        I_RFIFONUM => kernel_output_RFIFONUM,
        I_AWVALID => kernel_output_AWVALID,
        I_AWREADY => kernel_output_AWREADY,
        I_AWADDR => grp_cnn_fu_692_m_axi_kernel_output_AWADDR,
        I_AWLEN => grp_cnn_fu_692_m_axi_kernel_output_AWLEN,
        I_WVALID => kernel_output_WVALID,
        I_WREADY => kernel_output_WREADY,
        I_WDATA => grp_cnn_fu_692_m_axi_kernel_output_WDATA,
        I_WSTRB => grp_cnn_fu_692_m_axi_kernel_output_WSTRB,
        I_BVALID => kernel_output_BVALID,
        I_BREADY => kernel_output_BREADY);

    kernel_weight_m_axi_U : component kernel_cnn_kernel_weight_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 70,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_KERNEL_WEIGHT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_KERNEL_WEIGHT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_KERNEL_WEIGHT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_KERNEL_WEIGHT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_KERNEL_WEIGHT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_KERNEL_WEIGHT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_KERNEL_WEIGHT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_KERNEL_WEIGHT_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_KERNEL_WEIGHT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_KERNEL_WEIGHT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_KERNEL_WEIGHT_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_kernel_weight_AWVALID,
        AWREADY => m_axi_kernel_weight_AWREADY,
        AWADDR => m_axi_kernel_weight_AWADDR,
        AWID => m_axi_kernel_weight_AWID,
        AWLEN => m_axi_kernel_weight_AWLEN,
        AWSIZE => m_axi_kernel_weight_AWSIZE,
        AWBURST => m_axi_kernel_weight_AWBURST,
        AWLOCK => m_axi_kernel_weight_AWLOCK,
        AWCACHE => m_axi_kernel_weight_AWCACHE,
        AWPROT => m_axi_kernel_weight_AWPROT,
        AWQOS => m_axi_kernel_weight_AWQOS,
        AWREGION => m_axi_kernel_weight_AWREGION,
        AWUSER => m_axi_kernel_weight_AWUSER,
        WVALID => m_axi_kernel_weight_WVALID,
        WREADY => m_axi_kernel_weight_WREADY,
        WDATA => m_axi_kernel_weight_WDATA,
        WSTRB => m_axi_kernel_weight_WSTRB,
        WLAST => m_axi_kernel_weight_WLAST,
        WID => m_axi_kernel_weight_WID,
        WUSER => m_axi_kernel_weight_WUSER,
        ARVALID => m_axi_kernel_weight_ARVALID,
        ARREADY => m_axi_kernel_weight_ARREADY,
        ARADDR => m_axi_kernel_weight_ARADDR,
        ARID => m_axi_kernel_weight_ARID,
        ARLEN => m_axi_kernel_weight_ARLEN,
        ARSIZE => m_axi_kernel_weight_ARSIZE,
        ARBURST => m_axi_kernel_weight_ARBURST,
        ARLOCK => m_axi_kernel_weight_ARLOCK,
        ARCACHE => m_axi_kernel_weight_ARCACHE,
        ARPROT => m_axi_kernel_weight_ARPROT,
        ARQOS => m_axi_kernel_weight_ARQOS,
        ARREGION => m_axi_kernel_weight_ARREGION,
        ARUSER => m_axi_kernel_weight_ARUSER,
        RVALID => m_axi_kernel_weight_RVALID,
        RREADY => m_axi_kernel_weight_RREADY,
        RDATA => m_axi_kernel_weight_RDATA,
        RLAST => m_axi_kernel_weight_RLAST,
        RID => m_axi_kernel_weight_RID,
        RUSER => m_axi_kernel_weight_RUSER,
        RRESP => m_axi_kernel_weight_RRESP,
        BVALID => m_axi_kernel_weight_BVALID,
        BREADY => m_axi_kernel_weight_BREADY,
        BRESP => m_axi_kernel_weight_BRESP,
        BID => m_axi_kernel_weight_BID,
        BUSER => m_axi_kernel_weight_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => kernel_weight_ARVALID,
        I_ARREADY => kernel_weight_ARREADY,
        I_ARADDR => grp_cnn_fu_692_m_axi_kernel_weight_ARADDR,
        I_ARLEN => grp_cnn_fu_692_m_axi_kernel_weight_ARLEN,
        I_RVALID => kernel_weight_RVALID,
        I_RREADY => kernel_weight_RREADY,
        I_RDATA => kernel_weight_RDATA,
        I_RFIFONUM => kernel_weight_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => kernel_weight_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => kernel_weight_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => kernel_weight_BVALID,
        I_BREADY => ap_const_logic_0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_cnn_fu_692_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_fu_692_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_cnn_fu_692_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call171))) then 
                    grp_cnn_fu_692_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_fu_692_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_fu_692_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                vinput_read_reg_1024 <= vinput;
                voutput_read_reg_1014 <= voutput;
                vweight_read_reg_1019 <= vweight;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, grp_cnn_fu_692_ap_done, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_cnn_fu_692_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_cnn_fu_692_ap_done)
    begin
        if ((grp_cnn_fu_692_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call171_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call171 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_cnn_fu_692_ap_done, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_cnn_fu_692_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_cnn_fu_692_ap_done, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_cnn_fu_692_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_cnn_fu_692_ap_start <= grp_cnn_fu_692_ap_start_reg;

    kernel_input_ARVALID_assign_proc : process(ap_CS_fsm_state1, grp_cnn_fu_692_m_axi_kernel_input_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_input_ARVALID <= grp_cnn_fu_692_m_axi_kernel_input_ARVALID;
        else 
            kernel_input_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    kernel_input_RREADY_assign_proc : process(ap_CS_fsm_state1, grp_cnn_fu_692_m_axi_kernel_input_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_input_RREADY <= grp_cnn_fu_692_m_axi_kernel_input_RREADY;
        else 
            kernel_input_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    kernel_output_ARVALID_assign_proc : process(ap_CS_fsm_state1, grp_cnn_fu_692_m_axi_kernel_output_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_output_ARVALID <= grp_cnn_fu_692_m_axi_kernel_output_ARVALID;
        else 
            kernel_output_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    kernel_output_AWVALID_assign_proc : process(ap_CS_fsm_state1, grp_cnn_fu_692_m_axi_kernel_output_AWVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_output_AWVALID <= grp_cnn_fu_692_m_axi_kernel_output_AWVALID;
        else 
            kernel_output_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    kernel_output_BREADY_assign_proc : process(ap_CS_fsm_state1, grp_cnn_fu_692_m_axi_kernel_output_BREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_output_BREADY <= grp_cnn_fu_692_m_axi_kernel_output_BREADY;
        else 
            kernel_output_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    kernel_output_RREADY_assign_proc : process(ap_CS_fsm_state1, grp_cnn_fu_692_m_axi_kernel_output_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_output_RREADY <= grp_cnn_fu_692_m_axi_kernel_output_RREADY;
        else 
            kernel_output_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    kernel_output_WVALID_assign_proc : process(ap_CS_fsm_state1, grp_cnn_fu_692_m_axi_kernel_output_WVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_output_WVALID <= grp_cnn_fu_692_m_axi_kernel_output_WVALID;
        else 
            kernel_output_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    kernel_weight_ARVALID_assign_proc : process(ap_CS_fsm_state1, grp_cnn_fu_692_m_axi_kernel_weight_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_weight_ARVALID <= grp_cnn_fu_692_m_axi_kernel_weight_ARVALID;
        else 
            kernel_weight_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    kernel_weight_RREADY_assign_proc : process(ap_CS_fsm_state1, grp_cnn_fu_692_m_axi_kernel_weight_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_weight_RREADY <= grp_cnn_fu_692_m_axi_kernel_weight_RREADY;
        else 
            kernel_weight_RREADY <= ap_const_logic_0;
        end if; 
    end process;

end behav;
